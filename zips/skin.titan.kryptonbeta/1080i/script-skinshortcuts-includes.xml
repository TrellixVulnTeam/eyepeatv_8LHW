<?xml version='1.0' encoding='UTF-8'?>
<includes>
	<include name="skinshortcuts-mainmenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<label>Kids</label>
			<label2>Custom item</label2>
			<icon>special://skin/extras/icons/DefaultPicture.png</icon>
			<thumb />
			<property name="labelID">kids</property>
			<property name="defaultID">pictures</property>
			<visible>False</visible>
			<onclick>noop</onclick>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<label>$ADDON[script.skinshortcuts 32022]</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>special://profile/addon_data/skin.titan.kryptonbeta/custom_images/CustomBackgroundSetting20200513122647.png</thumb>
			<property name="labelID">livetv</property>
			<property name="defaultID">livetv</property>
			<property name="widget">tvrecordings</property>
			<property name="widgetName">19017</property>
			<property name="widgetType">pvr</property>
			<property name="widgetPath">plugin://script.skin.helper.widgets/?action=recordings&amp;mediatype=pvr&amp;limit=25&amp;reload=$INFO[Window(home).Property(widgetreload2)]</property>
			<property name="widgetTarget">pvr</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.PvrBackground)]</property>
			<property name="backgroundName">571</property>
			<property name="thumb.name">Custom single image</property>
			<property name="thumbName">Custom single image</property>
			<property name="infoline">none</property>
			<property name="infoline.name">None</property>
			<property name="infolineName">None</property>
			<visible>System.HasPVRAddon</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(TVGuide)</onclick>
			<property name="path">ActivateWindow(TVGuide)</property>
			<property name="list">TVGuide</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">livetv</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<label>Eye Pea TV</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>special://home/addons/plugin.video.eyepeatv.2/icon.png</thumb>
			<property name="labelID">plugin.video.eyepeatv.2</property>
			<property name="defaultID">plugin.video.eyepeatv.2</property>
			<property name="translatedPath">ActivateWindow(Videos,"plugin://plugin.video.eyepeatv.2",return)</property>
			<property name="infoline">none</property>
			<property name="infoline.name">None</property>
			<property name="infolineName">None</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,"plugin://plugin.video.eyepeatv.2",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.eyepeatv.2",return)</property>
			<property name="list">plugin://plugin.video.eyepeatv.2</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">plugin-video-eyepeatv-2</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<label>VoD</label>
			<label2>Custom item</label2>
			<icon>special://skin/extras/icons/DefaultVideo.png</icon>
			<thumb>special://profile/addon_data/skin.titan.kryptonbeta/custom_images/CustomBackgroundSetting20200513123439.png</thumb>
			<property name="labelID">plugin.video.vistatvshowbox/</property>
			<property name="defaultID">videos</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.GlobalFanartBackground)]</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32038]</property>
			<property name="infoline">none</property>
			<property name="infoline.name">None</property>
			<property name="infolineName">None</property>
			<property name="thumb.name">Custom single image</property>
			<property name="thumbName">Custom single image</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(10025,"plugin://plugin.video.vistatvshowbox/",return)</onclick>
			<property name="path">ActivateWindow(10025,"plugin://plugin.video.vistatvshowbox/",return)</property>
			<property name="list">plugin://plugin.video.vistatvshowbox/</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">plugin-video-vistatvshowbox</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<label>$LOCALIZE[342]</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>special://profile/addon_data/skin.titan.kryptonbeta/custom_images/CustomBackgroundSetting20200513122952.png</thumb>
			<property name="labelID">movies</property>
			<property name="defaultID">movies</property>
			<property name="widget">recommendedmovies</property>
			<property name="widgetName">$ADDON[script.skin.helper.widgets 32029]</property>
			<property name="widgetType">movies</property>
			<property name="widgetPath">plugin://script.skin.helper.widgets/?action=INPROGRESSANDRECOMMENDED&amp;mediatype=MOVIES&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetTarget">videos</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32039]</property>
			<property name="widget.1">recentmovies</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetType.1">movies</property>
			<property name="widgetPath.1">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetName.1">20386</property>
			<property name="widget.99">randommovies</property>
			<property name="widgetTarget.99">videos</property>
			<property name="widgetType.99">movies</property>
			<property name="widgetPath.99">plugin://script.skin.helper.widgets/?action=random&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetName.99">Spotlight</property>
			<property name="thumb.name">Custom single image</property>
			<property name="thumbName">Custom single image</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,"plugin://plugin.video.eyepeatv.2/?action=detect_modification&amp;title=%5BCOLOR+deepskyblue%5D%5BB%5DMOVIES+On+Demand%5B%2FB%5D%5B%2FCOLOR%5D&amp;url=&amp;thumbnail=C%3A%5CUsers%5Ckhanb%5CAppData%5CRoaming%5CKodi%5Caddons%5Cplugin.video.eyepeatv.2%5Cresources%5Cart%5Cvod.png&amp;plot=&amp;extra=&amp;page=",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.eyepeatv.2/?action=detect_modification&amp;title=%5BCOLOR+deepskyblue%5D%5BB%5DMOVIES+On+Demand%5B%2FB%5D%5B%2FCOLOR%5D&amp;url=&amp;thumbnail=C%3A%5CUsers%5Ckhanb%5CAppData%5CRoaming%5CKodi%5Caddons%5Cplugin.video.eyepeatv.2%5Cresources%5Cart%5Cvod.png&amp;plot=&amp;extra=&amp;page=",return)</property>
			<property name="list">plugin://plugin.video.eyepeatv.2/?action=detect_modification&amp;title=%5BCOLOR+deepskyblue%5D%5BB%5DMOVIES+On+Demand%5B%2FB%5D%5B%2FCOLOR%5D&amp;url=&amp;thumbnail=C%3A%5CUsers%5Ckhanb%5CAppData%5CRoaming%5CKodi%5Caddons%5Cplugin.video.eyepeatv.2%5Cresources%5Cart%5Cvod.png&amp;plot=&amp;extra=&amp;page=</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">movies</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<label>$LOCALIZE[20343]</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>special://home/addons/resource.images.skinicons.wide/resources/tvseries.png</thumb>
			<property name="labelID">tvshows</property>
			<property name="defaultID">tvshows</property>
			<property name="widget">nextepisodes</property>
			<property name="widgetName">$ADDON[script.skin.helper.widgets 32002]</property>
			<property name="widgetType">episodes</property>
			<property name="widgetPath">plugin://script.skin.helper.widgets/?action=next&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetTarget">videos</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32043]</property>
			<property name="widget.1">recentepisodes</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetType.1">episodes</property>
			<property name="widgetPath.1">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetName.1">20387</property>
			<property name="widget.99">randomtvshows</property>
			<property name="widgetTarget.99">videos</property>
			<property name="widgetType.99">tvshows</property>
			<property name="widgetPath.99">plugin://script.skin.helper.widgets/?action=random&amp;mediatype=tvshows&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetName.99">Spotlight</property>
			<property name="thumb.name">tvseries.png</property>
			<property name="thumbName">tvseries.png</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,"plugin://plugin.video.eyepeatv.2/?action=detect_modification2&amp;title=%5BCOLOR+red%5D%5BB%5DTV+SHOWS+On+Demand%5B%2FB%5D%5B%2FCOLOR%5D&amp;url=&amp;thumbnail=C%3A%5CUsers%5Ckhanb%5CAppData%5CRoaming%5CKodi%5Caddons%5Cplugin.video.eyepeatv.2%5Cresources%5Cart%5Cvod.png&amp;plot=&amp;extra=&amp;page=",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.eyepeatv.2/?action=detect_modification2&amp;title=%5BCOLOR+red%5D%5BB%5DTV+SHOWS+On+Demand%5B%2FB%5D%5B%2FCOLOR%5D&amp;url=&amp;thumbnail=C%3A%5CUsers%5Ckhanb%5CAppData%5CRoaming%5CKodi%5Caddons%5Cplugin.video.eyepeatv.2%5Cresources%5Cart%5Cvod.png&amp;plot=&amp;extra=&amp;page=",return)</property>
			<property name="list">plugin://plugin.video.eyepeatv.2/?action=detect_modification2&amp;title=%5BCOLOR+red%5D%5BB%5DTV+SHOWS+On+Demand%5B%2FB%5D%5B%2FCOLOR%5D&amp;url=&amp;thumbnail=C%3A%5CUsers%5Ckhanb%5CAppData%5CRoaming%5CKodi%5Caddons%5Cplugin.video.eyepeatv.2%5Cresources%5Cart%5Cvod.png&amp;plot=&amp;extra=&amp;page=</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">tvshows</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<label>24/7</label>
			<label2>Program</label2>
			<icon>special://profile/addon_data/skin.titan.kryptonbeta/custom_images/CustomBackgroundSetting20200513122743.png</icon>
			<thumb>special://profile/addon_data/skin.titan.kryptonbeta/custom_images/CustomBackgroundSetting20200513122743.png</thumb>
			<property name="labelID">script.eptv.247</property>
			<property name="defaultID">script.eptv.247</property>
			<property name="translatedPath">RunAddOn(script.eptv.247)</property>
			<property name="thumb.name">Custom single image</property>
			<property name="thumbName">Custom single image</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">RunAddOn(script.eptv.247)</onclick>
			<property name="path">RunAddOn(script.eptv.247)</property>
			<property name="list">RunAddOn(script.eptv.247)</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">script-eptv-247</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<label>Music</label>
			<label2>Custom item</label2>
			<icon>special://skin/extras/icons/DefaultAudio.png</icon>
			<thumb>special://profile/addon_data/skin.titan.kryptonbeta/custom_images/CustomBackgroundSetting20200513123108.png</thumb>
			<property name="labelID">plugin.audio.tuneinradio</property>
			<property name="defaultID">music</property>
			<property name="widget">recentalbums</property>
			<property name="widgetName">359</property>
			<property name="widgetType">albums</property>
			<property name="widgetPath">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=albums&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreloadmusic)]</property>
			<property name="widgetTarget">music</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.AllMusicBackground)]</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32048]</property>
			<property name="widget.1">recentsongs</property>
			<property name="widgetTarget.1">music</property>
			<property name="widgetType.1">songs</property>
			<property name="widgetPath.1">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=songs&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreloadmusic)]</property>
			<property name="widgetName.1">$ADDON[script.skin.helper.widgets 32012]</property>
			<property name="widgetstyle">square</property>
			<property name="thumb.name">Custom single image</property>
			<property name="thumbName">Custom single image</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Music,"plugin://plugin.audio.tuneinradio",return)</onclick>
			<property name="path">ActivateWindow(Music,"plugin://plugin.audio.tuneinradio",return)</property>
			<property name="list">plugin://plugin.audio.tuneinradio</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">plugin-audio-tuneinradio</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<label>APPS</label>
			<label2 />
			<icon>special://skin/extras/icons/DefaultProgram.png</icon>
			<thumb>special://profile/addon_data/skin.titan.kryptonbeta/custom_images/CustomBackgroundSetting20200513123132.png</thumb>
			<property name="labelID">31957</property>
			<property name="defaultID">programs</property>
			<visible>False</visible>
			<onclick>noop</onclick>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="10">
			<property name="id">$NUMBER[10]</property>
			<label>$LOCALIZE[13000]</label>
			<label2 />
			<icon>special://skin/extras/icons/DefaultAddonService.png</icon>
			<thumb>special://home/addons/resource.images.skinicons.wide/resources/settings.png</thumb>
			<property name="labelID">13000</property>
			<property name="defaultID">settings</property>
			<property name="widget">systeminfo</property>
			<property name="widgetName">130</property>
			<property name="widgetType">static</property>
			<property name="widgetPath">$INCLUDE[SystemInfoWidget]</property>
			<property name="widgetTarget">static</property>
			<property name="background">resource://resource.images.skinbackgrounds.titan/systeminfo.jpg</property>
			<property name="backgroundName">571</property>
			<property name="thumb.name">settings.png</property>
			<property name="thumbName">settings.png</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">num-13000</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="11">
			<property name="id">$NUMBER[11]</property>
			<label>$LOCALIZE[33060]</label>
			<label2 />
			<icon>special://skin/extras/icons/power.png</icon>
			<thumb>special://profile/addon_data/skin.titan.kryptonbeta/custom_images/CustomBackgroundSetting20200513123145.png</thumb>
			<property name="labelID">33060</property>
			<property name="defaultID">power</property>
			<property name="thumb.name">Custom single image</property>
			<property name="thumbName">Custom single image</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(shutdownmenu)</onclick>
			<property name="path">ActivateWindow(shutdownmenu)</property>
			<property name="list">shutdownmenu</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">num-33060</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="12">
			<property name="id">$NUMBER[12]</property>
			<label>$LOCALIZE[1036]</label>
			<label2 />
			<icon>special://skin/extras/icons/Favorites.png</icon>
			<thumb>special://home/addons/resource.images.skinicons.wide/resources/favourites.png</thumb>
			<property name="labelID">1036</property>
			<property name="defaultID">favourites</property>
			<property name="thumb.name">favourites.png</property>
			<property name="thumbName">favourites.png</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Favourites)</onclick>
			<property name="path">ActivateWindow(Favourites)</property>
			<property name="list">Favourites</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">num-1036</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="13">
			<property name="id">$NUMBER[13]</property>
			<label>Super Favourites</label>
			<label2>Program</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>special://home/addons/resource.images.skinicons.wide/resources/favourites.png</thumb>
			<property name="labelID">plugin.program.super.favourites</property>
			<property name="defaultID">plugin.program.super.favourites</property>
			<property name="translatedPath">ActivateWindow(Programs,"plugin://plugin.program.super.favourites",return)</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Programs,"plugin://plugin.program.super.favourites",return)</onclick>
			<property name="path">ActivateWindow(Programs,"plugin://plugin.program.super.favourites",return)</property>
			<property name="list">plugin://plugin.program.super.favourites</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">plugin-program-super-favourites</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="14">
			<property name="id">$NUMBER[14]</property>
			<label>$LOCALIZE[12600]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb>special://home/addons/resource.images.skinicons.wide/resources/weather.png</thumb>
			<property name="labelID">weather</property>
			<property name="defaultID">weather</property>
			<property name="widget">weather</property>
			<property name="widgetName">8</property>
			<property name="widgetType">static</property>
			<property name="widgetPath">$INCLUDE[WeatherWidget]</property>
			<property name="widgetTarget">static</property>
			<property name="background">$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[WeatherFanArtExtension]</property>
			<property name="thumb.name">weather.png</property>
			<property name="thumbName">weather.png</property>
			<visible>!String.IsEmpty(Weather.Plugin)</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Weather)</onclick>
			<property name="path">ActivateWindow(Weather)</property>
			<property name="list">Weather</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">weather</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="15">
			<property name="id">$NUMBER[15]</property>
			<label>$LOCALIZE[744]</label>
			<label2>item</label2>
			<icon>special://home/addons/resource.images.skinicons.wide/resources/filemanager.png</icon>
			<thumb>special://home/addons/resource.images.skinicons.wide/resources/filemanager.png</thumb>
			<property name="labelID">744</property>
			<property name="defaultID">744</property>
			<property name="translatedPath">ActivateWindow(Videos,sources://video/,return)</property>
			<property name="thumb.name">filemanager.png</property>
			<property name="thumbName">filemanager.png</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,sources://video/,return)</onclick>
			<property name="path">ActivateWindow(Videos,sources://video/,return)</property>
			<property name="list">sources://video/</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">num-744</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
	</include>
	<include />
	<include name="skinshortcuts-submenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[24001]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">24001</property>
			<property name="defaultID">24001</property>
			<onclick>ActivateWindow(Pictures,Addons,return)</onclick>
			<property name="path">ActivateWindow(Pictures,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),kids)</visible>
			<property name="group">kids</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[19023]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19023</property>
			<property name="defaultID">19023</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<onclick>ActivateWindow(TVChannels)</onclick>
			<property name="path">ActivateWindow(TVChannels)</property>
			<property name="list">TVChannels</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[19069]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19069</property>
			<property name="defaultID">19069</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<onclick>ActivateWindow(TVGuide)</onclick>
			<property name="path">ActivateWindow(TVGuide)</property>
			<property name="list">TVGuide</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">2</property>
			<label>24/7 TV</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">24-7tv</property>
			<property name="defaultID">19024</property>
			<onclick>RunAddon(script.eptv.247,return)</onclick>
			<property name="path">RunAddon(script.eptv.247,return)</property>
			<property name="list">RunAddon(script.eptv.247,return)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">2</property>
			<label>Eye Pea TV</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">plugin.video.eyepeatv.2/</property>
			<property name="defaultID">19163</property>
			<onclick>ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/",return)</onclick>
			<property name="path">ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/",return)</property>
			<property name="list">plugin://plugin.video.eyepeatv.2/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">2</property>
			<label>Search</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">search</property>
			<property name="defaultID">19040</property>
			<onclick>ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/?action=TVsearch&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cSearch-icon.png&amp;title=%5bCOLOR%20gold%5d%5bB%5dLive%20EyePeaTV%20Search%5b%2fB%5d%5b%2fCOLOR%5d%20(Enter%20tv%20show%20or%20movie%20name)&amp;url",return)</onclick>
			<property name="path">ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/?action=TVsearch&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cSearch-icon.png&amp;title=%5bCOLOR%20gold%5d%5bB%5dLive%20EyePeaTV%20Search%5b%2fB%5d%5b%2fCOLOR%5d%20(Enter%20tv%20show%20or%20movie%20name)&amp;url",return)</property>
			<property name="list">plugin://plugin.video.eyepeatv.2/?action=TVsearch&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cSearch-icon.png&amp;title=%5bCOLOR%20gold%5d%5bB%5dLive%20EyePeaTV%20Search%5b%2fB%5d%5b%2fCOLOR%5d%20(Enter%20tv%20show%20or%20movie%20name)&amp;url</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">2</property>
			<label>All Channels</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">allchannels</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/?action=security_check&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5clivetv.png&amp;title=%5bCOLOR%20orange%5d%5bB%5d%20EyePeaTV%20LIVE%20Full%20List%20%5b%2fB%5d%5b%2fCOLOR%5d&amp;url",return)</onclick>
			<property name="path">ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/?action=security_check&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5clivetv.png&amp;title=%5bCOLOR%20orange%5d%5bB%5d%20EyePeaTV%20LIVE%20Full%20List%20%5b%2fB%5d%5b%2fCOLOR%5d&amp;url",return)</property>
			<property name="list">plugin://plugin.video.eyepeatv.2/?action=security_check&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5clivetv.png&amp;title=%5bCOLOR%20orange%5d%5bB%5d%20EyePeaTV%20LIVE%20Full%20List%20%5b%2fB%5d%5b%2fCOLOR%5d&amp;url</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">4</property>
			<label>Requisition</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">plugin.video.vistatvshowbox/</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(10025,"plugin://plugin.video.vistatvshowbox/",return)</onclick>
			<property name="path">ActivateWindow(10025,"plugin://plugin.video.vistatvshowbox/",return)</property>
			<property name="list">plugin://plugin.video.vistatvshowbox/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),plugin-video-vistatvshowbox)</visible>
			<property name="group">plugin.video.vistatvshowbox/</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[342]</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">movies</property>
			<property name="defaultID">movies</property>
			<onclick>ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/?action=detect_modification&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cvod.png&amp;title=%5bCOLOR%20deepskyblue%5d%5bB%5dMOVIES%20On%20Demand%5b%2fB%5d%5b%2fCOLOR%5d&amp;url",return)</onclick>
			<property name="path">ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/?action=detect_modification&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cvod.png&amp;title=%5bCOLOR%20deepskyblue%5d%5bB%5dMOVIES%20On%20Demand%5b%2fB%5d%5b%2fCOLOR%5d&amp;url",return)</property>
			<property name="list">plugin://plugin.video.eyepeatv.2/?action=detect_modification&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cvod.png&amp;title=%5bCOLOR%20deepskyblue%5d%5bB%5dMOVIES%20On%20Demand%5b%2fB%5d%5b%2fCOLOR%5d&amp;url</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),plugin-video-vistatvshowbox)</visible>
			<property name="group">plugin.video.vistatvshowbox/</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[20343]</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">tvshows</property>
			<property name="defaultID">tvshows</property>
			<onclick>ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/?action=detect_modification2&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cvod.png&amp;title=%5bCOLOR%20red%5d%5bB%5dTV%20SHOWS%20On%20Demand%5b%2fB%5d%5b%2fCOLOR%5d&amp;url",return)</onclick>
			<property name="path">ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/?action=detect_modification2&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cvod.png&amp;title=%5bCOLOR%20red%5d%5bB%5dTV%20SHOWS%20On%20Demand%5b%2fB%5d%5b%2fCOLOR%5d&amp;url",return)</property>
			<property name="list">plugin://plugin.video.eyepeatv.2/?action=detect_modification2&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cvod.png&amp;title=%5bCOLOR%20red%5d%5bB%5dTV%20SHOWS%20On%20Demand%5b%2fB%5d%5b%2fCOLOR%5d&amp;url</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),plugin-video-vistatvshowbox)</visible>
			<property name="group">plugin.video.vistatvshowbox/</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[24001]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">24001</property>
			<property name="defaultID">24001</property>
			<visible>[False] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),plugin-video-vistatvshowbox)</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[744]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">744</property>
			<property name="defaultID">744</property>
			<onclick>ActivateWindow(Videos,Files,return)</onclick>
			<property name="path">ActivateWindow(Videos,Files,return)</property>
			<property name="list">Files</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),plugin-video-vistatvshowbox)</visible>
			<property name="group">plugin.video.vistatvshowbox/</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[136]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">136</property>
			<property name="defaultID">136</property>
			<visible>[False] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),plugin-video-vistatvshowbox)</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
		</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[14022]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">14022</property>
			<property name="defaultID">14022</property>
			<onclick>ActivateWindow(Videos,Root)</onclick>
			<property name="path">ActivateWindow(Videos,Root)</property>
			<property name="list">Root</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),plugin-video-vistatvshowbox)</visible>
			<property name="group">plugin.video.vistatvshowbox/</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">4</property>
			<label>VoD Settings</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">vodsettings</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(10025,"plugin://plugin.video.vistatvshowbox/?action=toolNavigator",return)</onclick>
			<property name="path">ActivateWindow(10025,"plugin://plugin.video.vistatvshowbox/?action=toolNavigator",return)</property>
			<property name="list">plugin://plugin.video.vistatvshowbox/?action=toolNavigator</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),plugin-video-vistatvshowbox)</visible>
			<property name="group">plugin.video.vistatvshowbox/</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[16101]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">16101</property>
			<property name="defaultID">16101</property>
			<onclick>ActivateWindow(Videos,special://skin/extras/UnwatchedMovies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://skin/extras/UnwatchedMovies.xsp,return)</property>
			<property name="list">special://skin/extras/UnwatchedMovies.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[575]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">575</property>
			<property name="defaultID">575</property>
			<onclick>ActivateWindow(Videos,special://skin/extras/InProgressMovies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://skin/extras/InProgressMovies.xsp,return)</property>
			<property name="list">special://skin/extras/InProgressMovies.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[31328]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">31328</property>
			<property name="defaultID">31328</property>
			<onclick>ActivateWindow(Videos,videodb://recentlyaddedmovies/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://recentlyaddedmovies/,return)</property>
			<property name="list">videodb://recentlyaddedmovies/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20434]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20434</property>
			<property name="defaultID">20434</property>
			<visible>[Library.HasContent(MovieSets)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/sets/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/sets/,return)</property>
			<property name="list">videodb://movies/sets/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[135]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/genres/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/genres/,return)</property>
			<property name="list">videodb://movies/genres/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[652]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">652</property>
			<property name="defaultID">652</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/years/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/years/,return)</property>
			<property name="list">videodb://movies/years/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[344]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">344</property>
			<property name="defaultID">344</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/actors/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/actors/,return)</property>
			<property name="list">videodb://movies/actors/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20459]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20459</property>
			<property name="defaultID">20459</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/tags/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/tags/,return)</property>
			<property name="list">videodb://movies/tags/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[4]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">4</property>
			<property name="defaultID">4</property>
			<visible>[System.HasAddon(script.tv.show.next.aired)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<onclick>RunAddon(script.tv.show.next.aired,return)</onclick>
			<property name="path">RunAddon(script.tv.show.next.aired,return)</property>
			<property name="list">RunAddon(script.tv.show.next.aired,return)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[575]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">575</property>
			<property name="defaultID">575</property>
			<onclick>ActivateWindow(Videos,videodb://inprogresstvshows/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://inprogresstvshows/,return)</property>
			<property name="list">videodb://inprogresstvshows/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[31328]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">31328</property>
			<property name="defaultID">31328</property>
			<onclick>ActivateWindow(Videos,videodb://recentlyaddedepisodes/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://recentlyaddedepisodes/,return)</property>
			<property name="list">videodb://recentlyaddedepisodes/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[135]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(TVShows)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(Videos,videodb://tvshows/genres/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://tvshows/genres/,return)</property>
			<property name="list">videodb://tvshows/genres/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[652]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">652</property>
			<property name="defaultID">652</property>
			<visible>[Library.HasContent(TVShows)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(Videos,videodb://tvshows/years/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://tvshows/years/,return)</property>
			<property name="list">videodb://tvshows/years/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[344]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">344</property>
			<property name="defaultID">344</property>
			<visible>[Library.HasContent(TVShows)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(Videos,videodb://tvshows/actors/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://tvshows/actors/,return)</property>
			<property name="list">videodb://tvshows/actors/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[133]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">133</property>
			<property name="defaultID">133</property>
			<visible>[False] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),plugin-audio-tuneinradio)</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[132]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">132</property>
			<property name="defaultID">132</property>
			<visible>[False] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),plugin-audio-tuneinradio)</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[134]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">134</property>
			<property name="defaultID">134</property>
			<visible>[False] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),plugin-audio-tuneinradio)</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[744]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">744</property>
			<property name="defaultID">744</property>
			<onclick>ActivateWindow(Music,sources://music/,return)</onclick>
			<property name="path">ActivateWindow(Music,sources://music/,return)</property>
			<property name="list">sources://music/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),plugin-audio-tuneinradio)</visible>
			<property name="group">plugin.audio.tuneinradio</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[24001]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">24001</property>
			<property name="defaultID">24001</property>
			<visible>[False] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),plugin-audio-tuneinradio)</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[14022]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">14022</property>
			<property name="defaultID">14022</property>
			<visible>[False] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),plugin-audio-tuneinradio)</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
		</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">8</property>
			<label>EPTV Radio</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">eptvradio</property>
			<property name="defaultID" />
			<onclick>PlayMedia("X:\\biglad\\Radio\\PUBLIC Radio.pls",return)</onclick>
			<property name="path">PlayMedia("X:\\biglad\\Radio\\PUBLIC Radio.pls",return)</property>
			<property name="list">PlayMedia(X:\\biglad\\Radio\\PUBLIC Radio.pls,return)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),plugin-audio-tuneinradio)</visible>
			<property name="group">plugin.audio.tuneinradio</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">8</property>
			<label>Tune-In Radio</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">plugin.audio.tuneinradio</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Music,"plugin://plugin.audio.tuneinradio",return)</onclick>
			<property name="path">ActivateWindow(Music,"plugin://plugin.audio.tuneinradio",return)</property>
			<property name="list">plugin://plugin.audio.tuneinradio</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),plugin-audio-tuneinradio)</visible>
			<property name="group">plugin.audio.tuneinradio</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(Music,Addons,return)</onclick>
			<property name="path">ActivateWindow(Music,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-31957)</visible>
			<property name="group">31957</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1037]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">1037</property>
			<property name="defaultID">1037</property>
			<onclick>ActivateWindow(Videos,Addons,return)</onclick>
			<property name="path">ActivateWindow(Videos,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-31957)</visible>
			<property name="group">31957</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[10040]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">10040</property>
			<property name="defaultID">10040</property>
			<onclick>ActivateWindow(Addonbrowser)</onclick>
			<property name="path">ActivateWindow(Addonbrowser)</property>
			<property name="list">Addonbrowser</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-31957)</visible>
			<property name="group">31957</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1043]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">1043</property>
			<property name="defaultID">1043</property>
			<onclick>ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-31957)</visible>
			<property name="group">31957</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1039]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">1039</property>
			<property name="defaultID">1039</property>
			<onclick>ActivateWindow(Pictures,Addons,return)</onclick>
			<property name="path">ActivateWindow(Pictures,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-31957)</visible>
			<property name="group">31957</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[24001]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">24001</property>
			<property name="defaultID">24001</property>
			<onclick>ActivateWindow(AddonBrowser)</onclick>
			<property name="path">ActivateWindow(AddonBrowser)</property>
			<property name="list">AddonBrowser</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-13000)</visible>
			<property name="group">13000</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[33060]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">33060</property>
			<property name="defaultID">33060</property>
			<onclick>ActivateWindow(shutdownmenu)</onclick>
			<property name="path">ActivateWindow(shutdownmenu)</property>
			<property name="list">shutdownmenu</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-13000)</visible>
			<property name="group">13000</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[20077]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-13000)</visible>
			<property name="group">13000</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[7]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-13000)</visible>
			<property name="group">13000</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[13200]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13200</property>
			<property name="defaultID">13200</property>
			<onclick>ActivateWindow(Profiles)</onclick>
			<property name="path">ActivateWindow(Profiles)</property>
			<property name="list">Profiles</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-13000)</visible>
			<property name="group">13000</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[130]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">130</property>
			<property name="defaultID">130</property>
			<onclick>ActivateWindow(SystemInfo)</onclick>
			<property name="path">ActivateWindow(SystemInfo)</property>
			<property name="list">SystemInfo</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-13000)</visible>
			<property name="group">13000</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[31159]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">31159</property>
			<property name="defaultID">31159</property>
			<visible>[system.getbool(eventlog.enabled)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-13000)</visible>
			<onclick>ActivateWindow(Eventlog)</onclick>
			<property name="path">ActivateWindow(Eventlog)</property>
			<property name="list">Eventlog</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">13000</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[13016]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<visible>[System.CanPowerDown] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-33060)</visible>
			<onclick>Powerdown()</onclick>
			<property name="path">Powerdown()</property>
			<property name="list">Powerdown()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[13013]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<visible>[System.CanReboot] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-33060)</visible>
			<onclick>Reset()</onclick>
			<property name="path">Reset()</property>
			<property name="list">Reset()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[13011]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13011</property>
			<property name="defaultID">13011</property>
			<visible>[System.CanSuspend] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-33060)</visible>
			<onclick>Suspend()</onclick>
			<property name="path">Suspend()</property>
			<property name="list">Suspend()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[13010]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13010</property>
			<property name="defaultID">13010</property>
			<visible>[System.CanHibernate] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-33060)</visible>
			<onclick>Hibernate()</onclick>
			<property name="path">Hibernate()</property>
			<property name="list">Hibernate()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[20126]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[System.HasLoginScreen | IntegerGreaterThan(System.ProfileCount,1)] + System.Loggedon] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-33060)</visible>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[13009]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<visible>[System.ShowExitButton] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-33060)</visible>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[[System.HasLoginScreen | IntegerGreaterThan(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[5]</label>
			<label2>Kodi Command</label2>
			<icon>common/settings1.png</icon>
			<thumb />
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[13009]</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb />
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<visible>[System.ShowExitButton] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[13016]</label>
			<label2>Kodi Command</label2>
			<icon>common/shutdown1.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ShutDown</onclick>
			<property name="path">ShutDown</property>
			<property name="list">ShutDown</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[13013]</label>
			<label2>Kodi Command</label2>
			<icon>common/reboot1.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Reboot</onclick>
			<property name="path">Reboot</property>
			<property name="list">Reboot</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-kids">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[24001]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">24001</property>
			<property name="defaultID">24001</property>
			<onclick>ActivateWindow(Pictures,Addons,return)</onclick>
			<property name="path">ActivateWindow(Pictures,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">kids</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-kids">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[24001]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">24001</property>
			<property name="defaultID">24001</property>
			<onclick>ActivateWindow(Pictures,Addons,return)</onclick>
			<property name="path">ActivateWindow(Pictures,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),kids)</visible>
			<property name="group">kids</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-livetv">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[19023]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19023</property>
			<property name="defaultID">19023</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(TVChannels)</onclick>
			<property name="path">ActivateWindow(TVChannels)</property>
			<property name="list">TVChannels</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[19069]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19069</property>
			<property name="defaultID">19069</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(TVGuide)</onclick>
			<property name="path">ActivateWindow(TVGuide)</property>
			<property name="list">TVGuide</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">2</property>
			<label>24/7 TV</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">24-7tv</property>
			<property name="defaultID">19024</property>
			<onclick>RunAddon(script.eptv.247,return)</onclick>
			<property name="path">RunAddon(script.eptv.247,return)</property>
			<property name="list">RunAddon(script.eptv.247,return)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">2</property>
			<label>Eye Pea TV</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">plugin.video.eyepeatv.2/</property>
			<property name="defaultID">19163</property>
			<onclick>ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/",return)</onclick>
			<property name="path">ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/",return)</property>
			<property name="list">plugin://plugin.video.eyepeatv.2/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">2</property>
			<label>Search</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">search</property>
			<property name="defaultID">19040</property>
			<onclick>ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/?action=TVsearch&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cSearch-icon.png&amp;title=%5bCOLOR%20gold%5d%5bB%5dLive%20EyePeaTV%20Search%5b%2fB%5d%5b%2fCOLOR%5d%20(Enter%20tv%20show%20or%20movie%20name)&amp;url",return)</onclick>
			<property name="path">ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/?action=TVsearch&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cSearch-icon.png&amp;title=%5bCOLOR%20gold%5d%5bB%5dLive%20EyePeaTV%20Search%5b%2fB%5d%5b%2fCOLOR%5d%20(Enter%20tv%20show%20or%20movie%20name)&amp;url",return)</property>
			<property name="list">plugin://plugin.video.eyepeatv.2/?action=TVsearch&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cSearch-icon.png&amp;title=%5bCOLOR%20gold%5d%5bB%5dLive%20EyePeaTV%20Search%5b%2fB%5d%5b%2fCOLOR%5d%20(Enter%20tv%20show%20or%20movie%20name)&amp;url</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">2</property>
			<label>All Channels</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">allchannels</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/?action=security_check&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5clivetv.png&amp;title=%5bCOLOR%20orange%5d%5bB%5d%20EyePeaTV%20LIVE%20Full%20List%20%5b%2fB%5d%5b%2fCOLOR%5d&amp;url",return)</onclick>
			<property name="path">ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/?action=security_check&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5clivetv.png&amp;title=%5bCOLOR%20orange%5d%5bB%5d%20EyePeaTV%20LIVE%20Full%20List%20%5b%2fB%5d%5b%2fCOLOR%5d&amp;url",return)</property>
			<property name="list">plugin://plugin.video.eyepeatv.2/?action=security_check&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5clivetv.png&amp;title=%5bCOLOR%20orange%5d%5bB%5d%20EyePeaTV%20LIVE%20Full%20List%20%5b%2fB%5d%5b%2fCOLOR%5d&amp;url</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-livetv">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[19023]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19023</property>
			<property name="defaultID">19023</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Window(10000).Property(submenuVisibility),livetv)</visible>
			<onclick>ActivateWindow(TVChannels)</onclick>
			<property name="path">ActivateWindow(TVChannels)</property>
			<property name="list">TVChannels</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[19069]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19069</property>
			<property name="defaultID">19069</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Window(10000).Property(submenuVisibility),livetv)</visible>
			<onclick>ActivateWindow(TVGuide)</onclick>
			<property name="path">ActivateWindow(TVGuide)</property>
			<property name="list">TVGuide</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">2</property>
			<label>24/7 TV</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">24-7tv</property>
			<property name="defaultID">19024</property>
			<onclick>RunAddon(script.eptv.247,return)</onclick>
			<property name="path">RunAddon(script.eptv.247,return)</property>
			<property name="list">RunAddon(script.eptv.247,return)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),livetv)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">2</property>
			<label>Eye Pea TV</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">plugin.video.eyepeatv.2/</property>
			<property name="defaultID">19163</property>
			<onclick>ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/",return)</onclick>
			<property name="path">ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/",return)</property>
			<property name="list">plugin://plugin.video.eyepeatv.2/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),livetv)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">2</property>
			<label>Search</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">search</property>
			<property name="defaultID">19040</property>
			<onclick>ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/?action=TVsearch&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cSearch-icon.png&amp;title=%5bCOLOR%20gold%5d%5bB%5dLive%20EyePeaTV%20Search%5b%2fB%5d%5b%2fCOLOR%5d%20(Enter%20tv%20show%20or%20movie%20name)&amp;url",return)</onclick>
			<property name="path">ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/?action=TVsearch&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cSearch-icon.png&amp;title=%5bCOLOR%20gold%5d%5bB%5dLive%20EyePeaTV%20Search%5b%2fB%5d%5b%2fCOLOR%5d%20(Enter%20tv%20show%20or%20movie%20name)&amp;url",return)</property>
			<property name="list">plugin://plugin.video.eyepeatv.2/?action=TVsearch&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cSearch-icon.png&amp;title=%5bCOLOR%20gold%5d%5bB%5dLive%20EyePeaTV%20Search%5b%2fB%5d%5b%2fCOLOR%5d%20(Enter%20tv%20show%20or%20movie%20name)&amp;url</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),livetv)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">2</property>
			<label>All Channels</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">allchannels</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/?action=security_check&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5clivetv.png&amp;title=%5bCOLOR%20orange%5d%5bB%5d%20EyePeaTV%20LIVE%20Full%20List%20%5b%2fB%5d%5b%2fCOLOR%5d&amp;url",return)</onclick>
			<property name="path">ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/?action=security_check&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5clivetv.png&amp;title=%5bCOLOR%20orange%5d%5bB%5d%20EyePeaTV%20LIVE%20Full%20List%20%5b%2fB%5d%5b%2fCOLOR%5d&amp;url",return)</property>
			<property name="list">plugin://plugin.video.eyepeatv.2/?action=security_check&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5clivetv.png&amp;title=%5bCOLOR%20orange%5d%5bB%5d%20EyePeaTV%20LIVE%20Full%20List%20%5b%2fB%5d%5b%2fCOLOR%5d&amp;url</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),livetv)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-plugin-video-eyepeatv-2">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-plugin-video-eyepeatv-2">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-plugin-video-vistatvshowbox">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">4</property>
			<label>Requisition</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">plugin.video.vistatvshowbox/</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(10025,"plugin://plugin.video.vistatvshowbox/",return)</onclick>
			<property name="path">ActivateWindow(10025,"plugin://plugin.video.vistatvshowbox/",return)</property>
			<property name="list">plugin://plugin.video.vistatvshowbox/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">plugin.video.vistatvshowbox/</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[342]</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">movies</property>
			<property name="defaultID">movies</property>
			<onclick>ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/?action=detect_modification&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cvod.png&amp;title=%5bCOLOR%20deepskyblue%5d%5bB%5dMOVIES%20On%20Demand%5b%2fB%5d%5b%2fCOLOR%5d&amp;url",return)</onclick>
			<property name="path">ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/?action=detect_modification&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cvod.png&amp;title=%5bCOLOR%20deepskyblue%5d%5bB%5dMOVIES%20On%20Demand%5b%2fB%5d%5b%2fCOLOR%5d&amp;url",return)</property>
			<property name="list">plugin://plugin.video.eyepeatv.2/?action=detect_modification&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cvod.png&amp;title=%5bCOLOR%20deepskyblue%5d%5bB%5dMOVIES%20On%20Demand%5b%2fB%5d%5b%2fCOLOR%5d&amp;url</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">plugin.video.vistatvshowbox/</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[20343]</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">tvshows</property>
			<property name="defaultID">tvshows</property>
			<onclick>ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/?action=detect_modification2&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cvod.png&amp;title=%5bCOLOR%20red%5d%5bB%5dTV%20SHOWS%20On%20Demand%5b%2fB%5d%5b%2fCOLOR%5d&amp;url",return)</onclick>
			<property name="path">ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/?action=detect_modification2&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cvod.png&amp;title=%5bCOLOR%20red%5d%5bB%5dTV%20SHOWS%20On%20Demand%5b%2fB%5d%5b%2fCOLOR%5d&amp;url",return)</property>
			<property name="list">plugin://plugin.video.eyepeatv.2/?action=detect_modification2&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cvod.png&amp;title=%5bCOLOR%20red%5d%5bB%5dTV%20SHOWS%20On%20Demand%5b%2fB%5d%5b%2fCOLOR%5d&amp;url</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">plugin.video.vistatvshowbox/</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[24001]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">24001</property>
			<property name="defaultID">24001</property>
			<visible>False</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[744]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">744</property>
			<property name="defaultID">744</property>
			<onclick>ActivateWindow(Videos,Files,return)</onclick>
			<property name="path">ActivateWindow(Videos,Files,return)</property>
			<property name="list">Files</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">plugin.video.vistatvshowbox/</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[136]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">136</property>
			<property name="defaultID">136</property>
			<visible>False</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
		</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[14022]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">14022</property>
			<property name="defaultID">14022</property>
			<onclick>ActivateWindow(Videos,Root)</onclick>
			<property name="path">ActivateWindow(Videos,Root)</property>
			<property name="list">Root</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">plugin.video.vistatvshowbox/</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">4</property>
			<label>VoD Settings</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">vodsettings</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(10025,"plugin://plugin.video.vistatvshowbox/?action=toolNavigator",return)</onclick>
			<property name="path">ActivateWindow(10025,"plugin://plugin.video.vistatvshowbox/?action=toolNavigator",return)</property>
			<property name="list">plugin://plugin.video.vistatvshowbox/?action=toolNavigator</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">plugin.video.vistatvshowbox/</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-plugin-video-vistatvshowbox">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">4</property>
			<label>Requisition</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">plugin.video.vistatvshowbox/</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(10025,"plugin://plugin.video.vistatvshowbox/",return)</onclick>
			<property name="path">ActivateWindow(10025,"plugin://plugin.video.vistatvshowbox/",return)</property>
			<property name="list">plugin://plugin.video.vistatvshowbox/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),plugin-video-vistatvshowbox)</visible>
			<property name="group">plugin.video.vistatvshowbox/</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[342]</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">movies</property>
			<property name="defaultID">movies</property>
			<onclick>ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/?action=detect_modification&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cvod.png&amp;title=%5bCOLOR%20deepskyblue%5d%5bB%5dMOVIES%20On%20Demand%5b%2fB%5d%5b%2fCOLOR%5d&amp;url",return)</onclick>
			<property name="path">ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/?action=detect_modification&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cvod.png&amp;title=%5bCOLOR%20deepskyblue%5d%5bB%5dMOVIES%20On%20Demand%5b%2fB%5d%5b%2fCOLOR%5d&amp;url",return)</property>
			<property name="list">plugin://plugin.video.eyepeatv.2/?action=detect_modification&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cvod.png&amp;title=%5bCOLOR%20deepskyblue%5d%5bB%5dMOVIES%20On%20Demand%5b%2fB%5d%5b%2fCOLOR%5d&amp;url</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),plugin-video-vistatvshowbox)</visible>
			<property name="group">plugin.video.vistatvshowbox/</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[20343]</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">tvshows</property>
			<property name="defaultID">tvshows</property>
			<onclick>ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/?action=detect_modification2&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cvod.png&amp;title=%5bCOLOR%20red%5d%5bB%5dTV%20SHOWS%20On%20Demand%5b%2fB%5d%5b%2fCOLOR%5d&amp;url",return)</onclick>
			<property name="path">ActivateWindow(10025,"plugin://plugin.video.eyepeatv.2/?action=detect_modification2&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cvod.png&amp;title=%5bCOLOR%20red%5d%5bB%5dTV%20SHOWS%20On%20Demand%5b%2fB%5d%5b%2fCOLOR%5d&amp;url",return)</property>
			<property name="list">plugin://plugin.video.eyepeatv.2/?action=detect_modification2&amp;extra&amp;page&amp;plot&amp;thumbnail=C%3a%5cUsers%5ckhanb%5cAppData%5cRoaming%5cKodi%5caddons%5cplugin.video.eyepeatv.2%5cresources%5cart%5cvod.png&amp;title=%5bCOLOR%20red%5d%5bB%5dTV%20SHOWS%20On%20Demand%5b%2fB%5d%5b%2fCOLOR%5d&amp;url</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),plugin-video-vistatvshowbox)</visible>
			<property name="group">plugin.video.vistatvshowbox/</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[24001]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">24001</property>
			<property name="defaultID">24001</property>
			<visible>[False] + String.IsEqual(Window(10000).Property(submenuVisibility),plugin-video-vistatvshowbox)</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[744]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">744</property>
			<property name="defaultID">744</property>
			<onclick>ActivateWindow(Videos,Files,return)</onclick>
			<property name="path">ActivateWindow(Videos,Files,return)</property>
			<property name="list">Files</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),plugin-video-vistatvshowbox)</visible>
			<property name="group">plugin.video.vistatvshowbox/</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[136]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">136</property>
			<property name="defaultID">136</property>
			<visible>[False] + String.IsEqual(Window(10000).Property(submenuVisibility),plugin-video-vistatvshowbox)</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
		</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[14022]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">14022</property>
			<property name="defaultID">14022</property>
			<onclick>ActivateWindow(Videos,Root)</onclick>
			<property name="path">ActivateWindow(Videos,Root)</property>
			<property name="list">Root</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),plugin-video-vistatvshowbox)</visible>
			<property name="group">plugin.video.vistatvshowbox/</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">4</property>
			<label>VoD Settings</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">vodsettings</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(10025,"plugin://plugin.video.vistatvshowbox/?action=toolNavigator",return)</onclick>
			<property name="path">ActivateWindow(10025,"plugin://plugin.video.vistatvshowbox/?action=toolNavigator",return)</property>
			<property name="list">plugin://plugin.video.vistatvshowbox/?action=toolNavigator</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),plugin-video-vistatvshowbox)</visible>
			<property name="group">plugin.video.vistatvshowbox/</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-movies">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[16101]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">16101</property>
			<property name="defaultID">16101</property>
			<onclick>ActivateWindow(Videos,special://skin/extras/UnwatchedMovies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://skin/extras/UnwatchedMovies.xsp,return)</property>
			<property name="list">special://skin/extras/UnwatchedMovies.xsp</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[575]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">575</property>
			<property name="defaultID">575</property>
			<onclick>ActivateWindow(Videos,special://skin/extras/InProgressMovies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://skin/extras/InProgressMovies.xsp,return)</property>
			<property name="list">special://skin/extras/InProgressMovies.xsp</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[31328]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">31328</property>
			<property name="defaultID">31328</property>
			<onclick>ActivateWindow(Videos,videodb://recentlyaddedmovies/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://recentlyaddedmovies/,return)</property>
			<property name="list">videodb://recentlyaddedmovies/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20434]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20434</property>
			<property name="defaultID">20434</property>
			<visible>Library.HasContent(MovieSets)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/sets/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/sets/,return)</property>
			<property name="list">videodb://movies/sets/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[135]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>Library.HasContent(Movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/genres/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/genres/,return)</property>
			<property name="list">videodb://movies/genres/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[652]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">652</property>
			<property name="defaultID">652</property>
			<visible>Library.HasContent(Movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/years/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/years/,return)</property>
			<property name="list">videodb://movies/years/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[344]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">344</property>
			<property name="defaultID">344</property>
			<visible>Library.HasContent(Movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/actors/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/actors/,return)</property>
			<property name="list">videodb://movies/actors/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20459]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20459</property>
			<property name="defaultID">20459</property>
			<visible>Library.HasContent(Movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/tags/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/tags/,return)</property>
			<property name="list">videodb://movies/tags/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-movies">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[16101]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">16101</property>
			<property name="defaultID">16101</property>
			<onclick>ActivateWindow(Videos,special://skin/extras/UnwatchedMovies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://skin/extras/UnwatchedMovies.xsp,return)</property>
			<property name="list">special://skin/extras/UnwatchedMovies.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),movies)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[575]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">575</property>
			<property name="defaultID">575</property>
			<onclick>ActivateWindow(Videos,special://skin/extras/InProgressMovies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://skin/extras/InProgressMovies.xsp,return)</property>
			<property name="list">special://skin/extras/InProgressMovies.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),movies)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[31328]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">31328</property>
			<property name="defaultID">31328</property>
			<onclick>ActivateWindow(Videos,videodb://recentlyaddedmovies/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://recentlyaddedmovies/,return)</property>
			<property name="list">videodb://recentlyaddedmovies/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),movies)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20434]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20434</property>
			<property name="defaultID">20434</property>
			<visible>[Library.HasContent(MovieSets)] + String.IsEqual(Window(10000).Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/sets/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/sets/,return)</property>
			<property name="list">videodb://movies/sets/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[135]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Window(10000).Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/genres/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/genres/,return)</property>
			<property name="list">videodb://movies/genres/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[652]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">652</property>
			<property name="defaultID">652</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Window(10000).Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/years/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/years/,return)</property>
			<property name="list">videodb://movies/years/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[344]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">344</property>
			<property name="defaultID">344</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Window(10000).Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/actors/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/actors/,return)</property>
			<property name="list">videodb://movies/actors/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20459]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20459</property>
			<property name="defaultID">20459</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Window(10000).Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/tags/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/tags/,return)</property>
			<property name="list">videodb://movies/tags/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-tvshows">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[4]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">4</property>
			<property name="defaultID">4</property>
			<visible>System.HasAddon(script.tv.show.next.aired)</visible>
			<onclick>RunAddon(script.tv.show.next.aired,return)</onclick>
			<property name="path">RunAddon(script.tv.show.next.aired,return)</property>
			<property name="list">RunAddon(script.tv.show.next.aired,return)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[575]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">575</property>
			<property name="defaultID">575</property>
			<onclick>ActivateWindow(Videos,videodb://inprogresstvshows/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://inprogresstvshows/,return)</property>
			<property name="list">videodb://inprogresstvshows/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[31328]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">31328</property>
			<property name="defaultID">31328</property>
			<onclick>ActivateWindow(Videos,videodb://recentlyaddedepisodes/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://recentlyaddedepisodes/,return)</property>
			<property name="list">videodb://recentlyaddedepisodes/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[135]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>Library.HasContent(TVShows)</visible>
			<onclick>ActivateWindow(Videos,videodb://tvshows/genres/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://tvshows/genres/,return)</property>
			<property name="list">videodb://tvshows/genres/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[652]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">652</property>
			<property name="defaultID">652</property>
			<visible>Library.HasContent(TVShows)</visible>
			<onclick>ActivateWindow(Videos,videodb://tvshows/years/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://tvshows/years/,return)</property>
			<property name="list">videodb://tvshows/years/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[344]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">344</property>
			<property name="defaultID">344</property>
			<visible>Library.HasContent(TVShows)</visible>
			<onclick>ActivateWindow(Videos,videodb://tvshows/actors/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://tvshows/actors/,return)</property>
			<property name="list">videodb://tvshows/actors/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-tvshows">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[4]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">4</property>
			<property name="defaultID">4</property>
			<visible>[System.HasAddon(script.tv.show.next.aired)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<onclick>RunAddon(script.tv.show.next.aired,return)</onclick>
			<property name="path">RunAddon(script.tv.show.next.aired,return)</property>
			<property name="list">RunAddon(script.tv.show.next.aired,return)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[575]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">575</property>
			<property name="defaultID">575</property>
			<onclick>ActivateWindow(Videos,videodb://inprogresstvshows/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://inprogresstvshows/,return)</property>
			<property name="list">videodb://inprogresstvshows/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[31328]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">31328</property>
			<property name="defaultID">31328</property>
			<onclick>ActivateWindow(Videos,videodb://recentlyaddedepisodes/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://recentlyaddedepisodes/,return)</property>
			<property name="list">videodb://recentlyaddedepisodes/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[135]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(TVShows)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(Videos,videodb://tvshows/genres/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://tvshows/genres/,return)</property>
			<property name="list">videodb://tvshows/genres/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[652]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">652</property>
			<property name="defaultID">652</property>
			<visible>[Library.HasContent(TVShows)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(Videos,videodb://tvshows/years/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://tvshows/years/,return)</property>
			<property name="list">videodb://tvshows/years/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[344]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">344</property>
			<property name="defaultID">344</property>
			<visible>[Library.HasContent(TVShows)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(Videos,videodb://tvshows/actors/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://tvshows/actors/,return)</property>
			<property name="list">videodb://tvshows/actors/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-script-eptv-247">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-script-eptv-247">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-plugin-audio-tuneinradio">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[133]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">133</property>
			<property name="defaultID">133</property>
			<visible>False</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[132]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">132</property>
			<property name="defaultID">132</property>
			<visible>False</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[134]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">134</property>
			<property name="defaultID">134</property>
			<visible>False</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[744]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">744</property>
			<property name="defaultID">744</property>
			<onclick>ActivateWindow(Music,sources://music/,return)</onclick>
			<property name="path">ActivateWindow(Music,sources://music/,return)</property>
			<property name="list">sources://music/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">plugin.audio.tuneinradio</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[24001]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">24001</property>
			<property name="defaultID">24001</property>
			<visible>False</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[14022]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">14022</property>
			<property name="defaultID">14022</property>
			<visible>False</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
		</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">8</property>
			<label>EPTV Radio</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">eptvradio</property>
			<property name="defaultID" />
			<onclick>PlayMedia("X:\\biglad\\Radio\\PUBLIC Radio.pls",return)</onclick>
			<property name="path">PlayMedia("X:\\biglad\\Radio\\PUBLIC Radio.pls",return)</property>
			<property name="list">PlayMedia(X:\\biglad\\Radio\\PUBLIC Radio.pls,return)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">plugin.audio.tuneinradio</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">8</property>
			<label>Tune-In Radio</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">plugin.audio.tuneinradio</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Music,"plugin://plugin.audio.tuneinradio",return)</onclick>
			<property name="path">ActivateWindow(Music,"plugin://plugin.audio.tuneinradio",return)</property>
			<property name="list">plugin://plugin.audio.tuneinradio</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">plugin.audio.tuneinradio</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-plugin-audio-tuneinradio">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[133]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">133</property>
			<property name="defaultID">133</property>
			<visible>[False] + String.IsEqual(Window(10000).Property(submenuVisibility),plugin-audio-tuneinradio)</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[132]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">132</property>
			<property name="defaultID">132</property>
			<visible>[False] + String.IsEqual(Window(10000).Property(submenuVisibility),plugin-audio-tuneinradio)</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[134]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">134</property>
			<property name="defaultID">134</property>
			<visible>[False] + String.IsEqual(Window(10000).Property(submenuVisibility),plugin-audio-tuneinradio)</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[744]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">744</property>
			<property name="defaultID">744</property>
			<onclick>ActivateWindow(Music,sources://music/,return)</onclick>
			<property name="path">ActivateWindow(Music,sources://music/,return)</property>
			<property name="list">sources://music/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),plugin-audio-tuneinradio)</visible>
			<property name="group">plugin.audio.tuneinradio</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[24001]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">24001</property>
			<property name="defaultID">24001</property>
			<visible>[False] + String.IsEqual(Window(10000).Property(submenuVisibility),plugin-audio-tuneinradio)</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[14022]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">14022</property>
			<property name="defaultID">14022</property>
			<visible>[False] + String.IsEqual(Window(10000).Property(submenuVisibility),plugin-audio-tuneinradio)</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
		</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">8</property>
			<label>EPTV Radio</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">eptvradio</property>
			<property name="defaultID" />
			<onclick>PlayMedia("X:\\biglad\\Radio\\PUBLIC Radio.pls",return)</onclick>
			<property name="path">PlayMedia("X:\\biglad\\Radio\\PUBLIC Radio.pls",return)</property>
			<property name="list">PlayMedia(X:\\biglad\\Radio\\PUBLIC Radio.pls,return)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),plugin-audio-tuneinradio)</visible>
			<property name="group">plugin.audio.tuneinradio</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">8</property>
			<label>Tune-In Radio</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">plugin.audio.tuneinradio</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Music,"plugin://plugin.audio.tuneinradio",return)</onclick>
			<property name="path">ActivateWindow(Music,"plugin://plugin.audio.tuneinradio",return)</property>
			<property name="list">plugin://plugin.audio.tuneinradio</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),plugin-audio-tuneinradio)</visible>
			<property name="group">plugin.audio.tuneinradio</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-num-31957">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(Music,Addons,return)</onclick>
			<property name="path">ActivateWindow(Music,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31957</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1037]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">1037</property>
			<property name="defaultID">1037</property>
			<onclick>ActivateWindow(Videos,Addons,return)</onclick>
			<property name="path">ActivateWindow(Videos,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31957</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[10040]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">10040</property>
			<property name="defaultID">10040</property>
			<onclick>ActivateWindow(Addonbrowser)</onclick>
			<property name="path">ActivateWindow(Addonbrowser)</property>
			<property name="list">Addonbrowser</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31957</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1043]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">1043</property>
			<property name="defaultID">1043</property>
			<onclick>ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31957</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1039]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">1039</property>
			<property name="defaultID">1039</property>
			<onclick>ActivateWindow(Pictures,Addons,return)</onclick>
			<property name="path">ActivateWindow(Pictures,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31957</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-num-31957">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(Music,Addons,return)</onclick>
			<property name="path">ActivateWindow(Music,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-31957)</visible>
			<property name="group">31957</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1037]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">1037</property>
			<property name="defaultID">1037</property>
			<onclick>ActivateWindow(Videos,Addons,return)</onclick>
			<property name="path">ActivateWindow(Videos,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-31957)</visible>
			<property name="group">31957</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[10040]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">10040</property>
			<property name="defaultID">10040</property>
			<onclick>ActivateWindow(Addonbrowser)</onclick>
			<property name="path">ActivateWindow(Addonbrowser)</property>
			<property name="list">Addonbrowser</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-31957)</visible>
			<property name="group">31957</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1043]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">1043</property>
			<property name="defaultID">1043</property>
			<onclick>ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-31957)</visible>
			<property name="group">31957</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1039]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">1039</property>
			<property name="defaultID">1039</property>
			<onclick>ActivateWindow(Pictures,Addons,return)</onclick>
			<property name="path">ActivateWindow(Pictures,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-31957)</visible>
			<property name="group">31957</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-num-13000">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[24001]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">24001</property>
			<property name="defaultID">24001</property>
			<onclick>ActivateWindow(AddonBrowser)</onclick>
			<property name="path">ActivateWindow(AddonBrowser)</property>
			<property name="list">AddonBrowser</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">13000</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[33060]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">33060</property>
			<property name="defaultID">33060</property>
			<onclick>ActivateWindow(shutdownmenu)</onclick>
			<property name="path">ActivateWindow(shutdownmenu)</property>
			<property name="list">shutdownmenu</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">13000</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[20077]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">13000</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[7]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">13000</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[13200]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13200</property>
			<property name="defaultID">13200</property>
			<onclick>ActivateWindow(Profiles)</onclick>
			<property name="path">ActivateWindow(Profiles)</property>
			<property name="list">Profiles</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">13000</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[130]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">130</property>
			<property name="defaultID">130</property>
			<onclick>ActivateWindow(SystemInfo)</onclick>
			<property name="path">ActivateWindow(SystemInfo)</property>
			<property name="list">SystemInfo</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">13000</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[31159]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">31159</property>
			<property name="defaultID">31159</property>
			<visible>system.getbool(eventlog.enabled)</visible>
			<onclick>ActivateWindow(Eventlog)</onclick>
			<property name="path">ActivateWindow(Eventlog)</property>
			<property name="list">Eventlog</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">13000</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-num-13000">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[24001]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">24001</property>
			<property name="defaultID">24001</property>
			<onclick>ActivateWindow(AddonBrowser)</onclick>
			<property name="path">ActivateWindow(AddonBrowser)</property>
			<property name="list">AddonBrowser</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-13000)</visible>
			<property name="group">13000</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[33060]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">33060</property>
			<property name="defaultID">33060</property>
			<onclick>ActivateWindow(shutdownmenu)</onclick>
			<property name="path">ActivateWindow(shutdownmenu)</property>
			<property name="list">shutdownmenu</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-13000)</visible>
			<property name="group">13000</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[20077]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-13000)</visible>
			<property name="group">13000</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[7]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-13000)</visible>
			<property name="group">13000</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[13200]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13200</property>
			<property name="defaultID">13200</property>
			<onclick>ActivateWindow(Profiles)</onclick>
			<property name="path">ActivateWindow(Profiles)</property>
			<property name="list">Profiles</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-13000)</visible>
			<property name="group">13000</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[130]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">130</property>
			<property name="defaultID">130</property>
			<onclick>ActivateWindow(SystemInfo)</onclick>
			<property name="path">ActivateWindow(SystemInfo)</property>
			<property name="list">SystemInfo</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-13000)</visible>
			<property name="group">13000</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[31159]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">31159</property>
			<property name="defaultID">31159</property>
			<visible>[system.getbool(eventlog.enabled)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-13000)</visible>
			<onclick>ActivateWindow(Eventlog)</onclick>
			<property name="path">ActivateWindow(Eventlog)</property>
			<property name="list">Eventlog</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">13000</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-num-33060">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[13016]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<visible>System.CanPowerDown</visible>
			<onclick>Powerdown()</onclick>
			<property name="path">Powerdown()</property>
			<property name="list">Powerdown()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[13013]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<visible>System.CanReboot</visible>
			<onclick>Reset()</onclick>
			<property name="path">Reset()</property>
			<property name="list">Reset()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[13011]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13011</property>
			<property name="defaultID">13011</property>
			<visible>System.CanSuspend</visible>
			<onclick>Suspend()</onclick>
			<property name="path">Suspend()</property>
			<property name="list">Suspend()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[13010]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13010</property>
			<property name="defaultID">13010</property>
			<visible>System.CanHibernate</visible>
			<onclick>Hibernate()</onclick>
			<property name="path">Hibernate()</property>
			<property name="list">Hibernate()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[20126]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[System.HasLoginScreen | IntegerGreaterThan(System.ProfileCount,1)] + System.Loggedon</visible>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[13009]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<visible>System.ShowExitButton</visible>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-num-33060">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[13016]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<visible>[System.CanPowerDown] + String.IsEqual(Window(10000).Property(submenuVisibility),num-33060)</visible>
			<onclick>Powerdown()</onclick>
			<property name="path">Powerdown()</property>
			<property name="list">Powerdown()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[13013]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<visible>[System.CanReboot] + String.IsEqual(Window(10000).Property(submenuVisibility),num-33060)</visible>
			<onclick>Reset()</onclick>
			<property name="path">Reset()</property>
			<property name="list">Reset()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[13011]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13011</property>
			<property name="defaultID">13011</property>
			<visible>[System.CanSuspend] + String.IsEqual(Window(10000).Property(submenuVisibility),num-33060)</visible>
			<onclick>Suspend()</onclick>
			<property name="path">Suspend()</property>
			<property name="list">Suspend()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[13010]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13010</property>
			<property name="defaultID">13010</property>
			<visible>[System.CanHibernate] + String.IsEqual(Window(10000).Property(submenuVisibility),num-33060)</visible>
			<onclick>Hibernate()</onclick>
			<property name="path">Hibernate()</property>
			<property name="list">Hibernate()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[20126]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[System.HasLoginScreen | IntegerGreaterThan(System.ProfileCount,1)] + System.Loggedon] + String.IsEqual(Window(10000).Property(submenuVisibility),num-33060)</visible>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[13009]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<visible>[System.ShowExitButton] + String.IsEqual(Window(10000).Property(submenuVisibility),num-33060)</visible>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-num-1036">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-num-1036">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-plugin-program-super-favourites">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-plugin-program-super-favourites">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-weather">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-weather">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-num-744">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-num-744">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-powermenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[System.HasLoginScreen | IntegerGreaterThan(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[5]</label>
			<label2>Kodi Command</label2>
			<icon>common/settings1.png</icon>
			<thumb />
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[13009]</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb />
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<visible>System.ShowExitButton</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[13016]</label>
			<label2>Kodi Command</label2>
			<icon>common/shutdown1.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ShutDown</onclick>
			<property name="path">ShutDown</property>
			<property name="list">ShutDown</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[13013]</label>
			<label2>Kodi Command</label2>
			<icon>common/reboot1.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Reboot</onclick>
			<property name="path">Reboot</property>
			<property name="list">Reboot</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-powermenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[[System.HasLoginScreen | IntegerGreaterThan(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[5]</label>
			<label2>Kodi Command</label2>
			<icon>common/settings1.png</icon>
			<thumb />
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[13009]</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb />
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<visible>[System.ShowExitButton] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[13016]</label>
			<label2>Kodi Command</label2>
			<icon>common/shutdown1.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ShutDown</onclick>
			<property name="path">ShutDown</property>
			<property name="list">ShutDown</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[13013]</label>
			<label2>Kodi Command</label2>
			<icon>common/reboot1.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Reboot</onclick>
			<property name="path">Reboot</property>
			<property name="list">Reboot</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-template-Widgets">
		<include condition="String.IsEqual(System.ProfileName,Master user)">skinshortcuts-template-Widgets-Master user</include>
	</include>
	<include name="skinshortcuts-template-Widgets-Master user">
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="2" />
			<param name="submenuid" value="livetv" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="false" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="default" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="2510" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="19017" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2510" />
			<param name="widgetName" value="19017" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="pvr" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=recordings&amp;mediatype=pvr&amp;limit=25&amp;reload=$INFO[Window(home).Property(widgetreload2)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-livetv,0) | !Skin.String(widgetvalue-livetv)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="2520" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2520" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="2530" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="2540" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="2550" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="2560" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="2570" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="2580" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="5" />
			<param name="submenuid" value="movies" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="default" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5510" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="$ADDON[script.skin.helper.widgets 32029]" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5510" />
			<param name="widgetName" value="$ADDON[script.skin.helper.widgets 32029]" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=INPROGRESSANDRECOMMENDED&amp;mediatype=MOVIES&amp;reload=$INFO[Window(Home).Property(widgetreload)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-movies,0) | !Skin.String(widgetvalue-movies)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5520" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="20386" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5520" />
			<param name="widgetName" value="20386" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5530" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5540" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5550" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5560" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5570" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5580" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="6" />
			<param name="submenuid" value="tvshows" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="default" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="6510" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="$ADDON[script.skin.helper.widgets 32002]" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6510" />
			<param name="widgetName" value="$ADDON[script.skin.helper.widgets 32002]" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=next&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-tvshows,0) | !Skin.String(widgetvalue-tvshows)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="6520" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="20387" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6520" />
			<param name="widgetName" value="20387" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="6530" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="6540" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="6550" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="6560" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="6570" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="6580" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="8" />
			<param name="submenuid" value="plugin-audio-tuneinradio" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="square" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8510" />
			<param name="submenuid" value="plugin-audio-tuneinradio" />
			<param name="widgetName" value="359" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8510" />
			<param name="widgetName" value="359" />
			<param name="submenuid" value="plugin-audio-tuneinradio" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="music" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=albums&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreloadmusic)]" />
			<param name="widgetStyle" value="widget_layout_square" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-plugin-audio-tuneinradio,0) | !Skin.String(widgetvalue-plugin-audio-tuneinradio)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8520" />
			<param name="submenuid" value="plugin-audio-tuneinradio" />
			<param name="widgetName" value="$ADDON[script.skin.helper.widgets 32012]" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8520" />
			<param name="widgetName" value="$ADDON[script.skin.helper.widgets 32012]" />
			<param name="submenuid" value="plugin-audio-tuneinradio" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="music" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=songs&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreloadmusic)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-plugin-audio-tuneinradio,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8530" />
			<param name="submenuid" value="plugin-audio-tuneinradio" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="plugin-audio-tuneinradio" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-plugin-audio-tuneinradio,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8540" />
			<param name="submenuid" value="plugin-audio-tuneinradio" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="plugin-audio-tuneinradio" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-plugin-audio-tuneinradio,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8550" />
			<param name="submenuid" value="plugin-audio-tuneinradio" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="plugin-audio-tuneinradio" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-plugin-audio-tuneinradio,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8560" />
			<param name="submenuid" value="plugin-audio-tuneinradio" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="plugin-audio-tuneinradio" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-plugin-audio-tuneinradio,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8570" />
			<param name="submenuid" value="plugin-audio-tuneinradio" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="plugin-audio-tuneinradio" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-plugin-audio-tuneinradio,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8580" />
			<param name="submenuid" value="plugin-audio-tuneinradio" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="plugin-audio-tuneinradio" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-plugin-audio-tuneinradio,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="10" />
			<param name="submenuid" value="num-13000" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="false" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="default" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="10510" />
			<param name="submenuid" value="num-13000" />
			<param name="widgetName" value="130" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="systeminfo" />
			<param name="widgetid" value="10510" />
			<param name="widgetName" value="130" />
			<param name="submenuid" value="num-13000" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="static" />
			<param name="widgetPath" value="$INCLUDE[SystemInfoWidget]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-num-13000,0) | !Skin.String(widgetvalue-num-13000)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="10520" />
			<param name="submenuid" value="num-13000" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="10520" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="num-13000" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-num-13000,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="10530" />
			<param name="submenuid" value="num-13000" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="10530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="num-13000" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-num-13000,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="10540" />
			<param name="submenuid" value="num-13000" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="10540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="num-13000" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-num-13000,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="10550" />
			<param name="submenuid" value="num-13000" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="10550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="num-13000" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-num-13000,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="10560" />
			<param name="submenuid" value="num-13000" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="10560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="num-13000" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-num-13000,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="10570" />
			<param name="submenuid" value="num-13000" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="10570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="num-13000" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-num-13000,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="10580" />
			<param name="submenuid" value="num-13000" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="10580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="num-13000" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-num-13000,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="14" />
			<param name="submenuid" value="weather" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="false" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="default" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="14510" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="8" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="weather" />
			<param name="widgetid" value="14510" />
			<param name="widgetName" value="8" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="static" />
			<param name="widgetPath" value="$INCLUDE[WeatherWidget]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-weather,0) | !Skin.String(widgetvalue-weather)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="14520" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="14520" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="14530" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="14530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="14540" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="14540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="14550" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="14550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="14560" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="14560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="14570" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="14570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="14580" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="14580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
		</include>
	</include>
	<include name="skinshortcuts-template-spotlightwidget">
		<include condition="String.IsEqual(System.ProfileName,Master user)">skinshortcuts-template-spotlightwidget-Master user</include>
	</include>
	<include name="skinshortcuts-template-spotlightwidget-Master user">
		<control id="1508" type="panel">
			<visible>String.IsEqual(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<include>EnhancedHomeSpotLightWidgetLayout</include>
			<content target="videos">plugin://script.skin.helper.widgets/?action=random&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
		</control>
		<control id="1508" type="panel">
			<visible>String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<include>EnhancedHomeSpotLightWidgetLayout</include>
			<content target="videos">plugin://script.skin.helper.widgets/?action=random&amp;mediatype=tvshows&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
		</control>
	</include>
	<variable name="2510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=recordings&amp;mediatype=pvr&amp;limit=25&amp;reload=$INFO[Window(home).Property(widgetreload2)]</value>
	</variable>
	<variable name="widgetinfolabel-2510">
		<value condition="String.Contains(Container(2510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2510).ListItem.label] $INFO[Container(2510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Title) + String.Contains(Container(2510).ListItem.FolderPath, pvr://)">$INFO[Container(2510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Season) + !String.IsEmpty(Container(2510).ListItem.Episode) + !String.Contains(Container(2510).ListItem.TvShowTitle,Container(2510).ListItem.Title)">[UPPERCASE]S$INFO[Container(2510).ListItem.Season]E$INFO[Container(2510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Title)">$INFO[Container(2510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Label)">$INFO[Container(2510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-2510">
		<value condition="!String.IsEmpty(Container(2510).ListItem.TvShowTitle) + !String.IsEmpty(Container(2510).ListItem.Genre)">$INFO[Container(2510).ListItem.TvShowTitle,, • ]$INFO[Container(2510).ListItem.Year,, • ]$INFO[Container(2510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.TvShowTitle)">$INFO[Container(2510).ListItem.TvShowTitle,, • ]$INFO[Container(2510).ListItem.Premiered,, • ]$INFO[Container(2510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Year)">$INFO[Container(2510).ListItem.Year,, • ]$INFO[Container(2510).ListItem.Duration,,min. • ]$INFO[Container(2510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Artist) + !String.IsEmpty(Container(2510).ListItem.Album)">$INFO[Container(2510).ListItem.Artist,, • ]$INFO[Container(2510).ListItem.Album,, • ]$INFO[Container(2510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Property(StartTime))">$INFO[Container(2510).ListItem.Property(ChannelName),, • ]$INFO[Container(2510).ListItem.Property(StartTime),, - ]$INFO[Container(2510).ListItem.Property(EndTime),, • ]$INFO[Container(2510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.StartTime)">$INFO[Container(2510).ListItem.ChannelName,, • ]$INFO[Container(2510).ListItem.StartTime,, - ]$INFO[Container(2510).ListItem.EndTime,, • ]$INFO[Container(2510).ListItem.Genre]</value>
	</variable>
	<variable name="2520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-2520">
		<value condition="String.Contains(Container(2520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2520).ListItem.label] $INFO[Container(2520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Title) + String.Contains(Container(2520).ListItem.FolderPath, pvr://)">$INFO[Container(2520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Season) + !String.IsEmpty(Container(2520).ListItem.Episode) + !String.Contains(Container(2520).ListItem.TvShowTitle,Container(2520).ListItem.Title)">[UPPERCASE]S$INFO[Container(2520).ListItem.Season]E$INFO[Container(2520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Title)">$INFO[Container(2520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Label)">$INFO[Container(2520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-2520">
		<value condition="!String.IsEmpty(Container(2520).ListItem.TvShowTitle) + !String.IsEmpty(Container(2520).ListItem.Genre)">$INFO[Container(2520).ListItem.TvShowTitle,, • ]$INFO[Container(2520).ListItem.Year,, • ]$INFO[Container(2520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.TvShowTitle)">$INFO[Container(2520).ListItem.TvShowTitle,, • ]$INFO[Container(2520).ListItem.Premiered,, • ]$INFO[Container(2520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Year)">$INFO[Container(2520).ListItem.Year,, • ]$INFO[Container(2520).ListItem.Duration,,min. • ]$INFO[Container(2520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Artist) + !String.IsEmpty(Container(2520).ListItem.Album)">$INFO[Container(2520).ListItem.Artist,, • ]$INFO[Container(2520).ListItem.Album,, • ]$INFO[Container(2520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Property(StartTime))">$INFO[Container(2520).ListItem.Property(ChannelName),, • ]$INFO[Container(2520).ListItem.Property(StartTime),, - ]$INFO[Container(2520).ListItem.Property(EndTime),, • ]$INFO[Container(2520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.StartTime)">$INFO[Container(2520).ListItem.ChannelName,, • ]$INFO[Container(2520).ListItem.StartTime,, - ]$INFO[Container(2520).ListItem.EndTime,, • ]$INFO[Container(2520).ListItem.Genre]</value>
	</variable>
	<variable name="2530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-2530">
		<value condition="String.Contains(Container(2530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2530).ListItem.label] $INFO[Container(2530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Title) + String.Contains(Container(2530).ListItem.FolderPath, pvr://)">$INFO[Container(2530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Season) + !String.IsEmpty(Container(2530).ListItem.Episode) + !String.Contains(Container(2530).ListItem.TvShowTitle,Container(2530).ListItem.Title)">[UPPERCASE]S$INFO[Container(2530).ListItem.Season]E$INFO[Container(2530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Title)">$INFO[Container(2530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Label)">$INFO[Container(2530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-2530">
		<value condition="!String.IsEmpty(Container(2530).ListItem.TvShowTitle) + !String.IsEmpty(Container(2530).ListItem.Genre)">$INFO[Container(2530).ListItem.TvShowTitle,, • ]$INFO[Container(2530).ListItem.Year,, • ]$INFO[Container(2530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.TvShowTitle)">$INFO[Container(2530).ListItem.TvShowTitle,, • ]$INFO[Container(2530).ListItem.Premiered,, • ]$INFO[Container(2530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Year)">$INFO[Container(2530).ListItem.Year,, • ]$INFO[Container(2530).ListItem.Duration,,min. • ]$INFO[Container(2530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Artist) + !String.IsEmpty(Container(2530).ListItem.Album)">$INFO[Container(2530).ListItem.Artist,, • ]$INFO[Container(2530).ListItem.Album,, • ]$INFO[Container(2530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Property(StartTime))">$INFO[Container(2530).ListItem.Property(ChannelName),, • ]$INFO[Container(2530).ListItem.Property(StartTime),, - ]$INFO[Container(2530).ListItem.Property(EndTime),, • ]$INFO[Container(2530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.StartTime)">$INFO[Container(2530).ListItem.ChannelName,, • ]$INFO[Container(2530).ListItem.StartTime,, - ]$INFO[Container(2530).ListItem.EndTime,, • ]$INFO[Container(2530).ListItem.Genre]</value>
	</variable>
	<variable name="2540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-2540">
		<value condition="String.Contains(Container(2540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2540).ListItem.label] $INFO[Container(2540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Title) + String.Contains(Container(2540).ListItem.FolderPath, pvr://)">$INFO[Container(2540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Season) + !String.IsEmpty(Container(2540).ListItem.Episode) + !String.Contains(Container(2540).ListItem.TvShowTitle,Container(2540).ListItem.Title)">[UPPERCASE]S$INFO[Container(2540).ListItem.Season]E$INFO[Container(2540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Title)">$INFO[Container(2540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Label)">$INFO[Container(2540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-2540">
		<value condition="!String.IsEmpty(Container(2540).ListItem.TvShowTitle) + !String.IsEmpty(Container(2540).ListItem.Genre)">$INFO[Container(2540).ListItem.TvShowTitle,, • ]$INFO[Container(2540).ListItem.Year,, • ]$INFO[Container(2540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.TvShowTitle)">$INFO[Container(2540).ListItem.TvShowTitle,, • ]$INFO[Container(2540).ListItem.Premiered,, • ]$INFO[Container(2540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Year)">$INFO[Container(2540).ListItem.Year,, • ]$INFO[Container(2540).ListItem.Duration,,min. • ]$INFO[Container(2540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Artist) + !String.IsEmpty(Container(2540).ListItem.Album)">$INFO[Container(2540).ListItem.Artist,, • ]$INFO[Container(2540).ListItem.Album,, • ]$INFO[Container(2540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Property(StartTime))">$INFO[Container(2540).ListItem.Property(ChannelName),, • ]$INFO[Container(2540).ListItem.Property(StartTime),, - ]$INFO[Container(2540).ListItem.Property(EndTime),, • ]$INFO[Container(2540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.StartTime)">$INFO[Container(2540).ListItem.ChannelName,, • ]$INFO[Container(2540).ListItem.StartTime,, - ]$INFO[Container(2540).ListItem.EndTime,, • ]$INFO[Container(2540).ListItem.Genre]</value>
	</variable>
	<variable name="2550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-2550">
		<value condition="String.Contains(Container(2550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2550).ListItem.label] $INFO[Container(2550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Title) + String.Contains(Container(2550).ListItem.FolderPath, pvr://)">$INFO[Container(2550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Season) + !String.IsEmpty(Container(2550).ListItem.Episode) + !String.Contains(Container(2550).ListItem.TvShowTitle,Container(2550).ListItem.Title)">[UPPERCASE]S$INFO[Container(2550).ListItem.Season]E$INFO[Container(2550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Title)">$INFO[Container(2550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Label)">$INFO[Container(2550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-2550">
		<value condition="!String.IsEmpty(Container(2550).ListItem.TvShowTitle) + !String.IsEmpty(Container(2550).ListItem.Genre)">$INFO[Container(2550).ListItem.TvShowTitle,, • ]$INFO[Container(2550).ListItem.Year,, • ]$INFO[Container(2550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.TvShowTitle)">$INFO[Container(2550).ListItem.TvShowTitle,, • ]$INFO[Container(2550).ListItem.Premiered,, • ]$INFO[Container(2550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Year)">$INFO[Container(2550).ListItem.Year,, • ]$INFO[Container(2550).ListItem.Duration,,min. • ]$INFO[Container(2550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Artist) + !String.IsEmpty(Container(2550).ListItem.Album)">$INFO[Container(2550).ListItem.Artist,, • ]$INFO[Container(2550).ListItem.Album,, • ]$INFO[Container(2550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Property(StartTime))">$INFO[Container(2550).ListItem.Property(ChannelName),, • ]$INFO[Container(2550).ListItem.Property(StartTime),, - ]$INFO[Container(2550).ListItem.Property(EndTime),, • ]$INFO[Container(2550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.StartTime)">$INFO[Container(2550).ListItem.ChannelName,, • ]$INFO[Container(2550).ListItem.StartTime,, - ]$INFO[Container(2550).ListItem.EndTime,, • ]$INFO[Container(2550).ListItem.Genre]</value>
	</variable>
	<variable name="2560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-2560">
		<value condition="String.Contains(Container(2560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2560).ListItem.label] $INFO[Container(2560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Title) + String.Contains(Container(2560).ListItem.FolderPath, pvr://)">$INFO[Container(2560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Season) + !String.IsEmpty(Container(2560).ListItem.Episode) + !String.Contains(Container(2560).ListItem.TvShowTitle,Container(2560).ListItem.Title)">[UPPERCASE]S$INFO[Container(2560).ListItem.Season]E$INFO[Container(2560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Title)">$INFO[Container(2560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Label)">$INFO[Container(2560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-2560">
		<value condition="!String.IsEmpty(Container(2560).ListItem.TvShowTitle) + !String.IsEmpty(Container(2560).ListItem.Genre)">$INFO[Container(2560).ListItem.TvShowTitle,, • ]$INFO[Container(2560).ListItem.Year,, • ]$INFO[Container(2560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.TvShowTitle)">$INFO[Container(2560).ListItem.TvShowTitle,, • ]$INFO[Container(2560).ListItem.Premiered,, • ]$INFO[Container(2560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Year)">$INFO[Container(2560).ListItem.Year,, • ]$INFO[Container(2560).ListItem.Duration,,min. • ]$INFO[Container(2560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Artist) + !String.IsEmpty(Container(2560).ListItem.Album)">$INFO[Container(2560).ListItem.Artist,, • ]$INFO[Container(2560).ListItem.Album,, • ]$INFO[Container(2560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Property(StartTime))">$INFO[Container(2560).ListItem.Property(ChannelName),, • ]$INFO[Container(2560).ListItem.Property(StartTime),, - ]$INFO[Container(2560).ListItem.Property(EndTime),, • ]$INFO[Container(2560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.StartTime)">$INFO[Container(2560).ListItem.ChannelName,, • ]$INFO[Container(2560).ListItem.StartTime,, - ]$INFO[Container(2560).ListItem.EndTime,, • ]$INFO[Container(2560).ListItem.Genre]</value>
	</variable>
	<variable name="2570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-2570">
		<value condition="String.Contains(Container(2570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2570).ListItem.label] $INFO[Container(2570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Title) + String.Contains(Container(2570).ListItem.FolderPath, pvr://)">$INFO[Container(2570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Season) + !String.IsEmpty(Container(2570).ListItem.Episode) + !String.Contains(Container(2570).ListItem.TvShowTitle,Container(2570).ListItem.Title)">[UPPERCASE]S$INFO[Container(2570).ListItem.Season]E$INFO[Container(2570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Title)">$INFO[Container(2570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Label)">$INFO[Container(2570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-2570">
		<value condition="!String.IsEmpty(Container(2570).ListItem.TvShowTitle) + !String.IsEmpty(Container(2570).ListItem.Genre)">$INFO[Container(2570).ListItem.TvShowTitle,, • ]$INFO[Container(2570).ListItem.Year,, • ]$INFO[Container(2570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.TvShowTitle)">$INFO[Container(2570).ListItem.TvShowTitle,, • ]$INFO[Container(2570).ListItem.Premiered,, • ]$INFO[Container(2570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Year)">$INFO[Container(2570).ListItem.Year,, • ]$INFO[Container(2570).ListItem.Duration,,min. • ]$INFO[Container(2570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Artist) + !String.IsEmpty(Container(2570).ListItem.Album)">$INFO[Container(2570).ListItem.Artist,, • ]$INFO[Container(2570).ListItem.Album,, • ]$INFO[Container(2570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Property(StartTime))">$INFO[Container(2570).ListItem.Property(ChannelName),, • ]$INFO[Container(2570).ListItem.Property(StartTime),, - ]$INFO[Container(2570).ListItem.Property(EndTime),, • ]$INFO[Container(2570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.StartTime)">$INFO[Container(2570).ListItem.ChannelName,, • ]$INFO[Container(2570).ListItem.StartTime,, - ]$INFO[Container(2570).ListItem.EndTime,, • ]$INFO[Container(2570).ListItem.Genre]</value>
	</variable>
	<variable name="2580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-2580">
		<value condition="String.Contains(Container(2580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2580).ListItem.label] $INFO[Container(2580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Title) + String.Contains(Container(2580).ListItem.FolderPath, pvr://)">$INFO[Container(2580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Season) + !String.IsEmpty(Container(2580).ListItem.Episode) + !String.Contains(Container(2580).ListItem.TvShowTitle,Container(2580).ListItem.Title)">[UPPERCASE]S$INFO[Container(2580).ListItem.Season]E$INFO[Container(2580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Title)">$INFO[Container(2580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Label)">$INFO[Container(2580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-2580">
		<value condition="!String.IsEmpty(Container(2580).ListItem.TvShowTitle) + !String.IsEmpty(Container(2580).ListItem.Genre)">$INFO[Container(2580).ListItem.TvShowTitle,, • ]$INFO[Container(2580).ListItem.Year,, • ]$INFO[Container(2580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.TvShowTitle)">$INFO[Container(2580).ListItem.TvShowTitle,, • ]$INFO[Container(2580).ListItem.Premiered,, • ]$INFO[Container(2580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Year)">$INFO[Container(2580).ListItem.Year,, • ]$INFO[Container(2580).ListItem.Duration,,min. • ]$INFO[Container(2580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Artist) + !String.IsEmpty(Container(2580).ListItem.Album)">$INFO[Container(2580).ListItem.Artist,, • ]$INFO[Container(2580).ListItem.Album,, • ]$INFO[Container(2580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Property(StartTime))">$INFO[Container(2580).ListItem.Property(ChannelName),, • ]$INFO[Container(2580).ListItem.Property(StartTime),, - ]$INFO[Container(2580).ListItem.Property(EndTime),, • ]$INFO[Container(2580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.StartTime)">$INFO[Container(2580).ListItem.ChannelName,, • ]$INFO[Container(2580).ListItem.StartTime,, - ]$INFO[Container(2580).ListItem.EndTime,, • ]$INFO[Container(2580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-2">
		<value condition="Skin.String(widgetvalue-livetv,7)" />
		<value condition="Skin.String(widgetvalue-livetv,6)" />
		<value condition="Skin.String(widgetvalue-livetv,5)" />
		<value condition="Skin.String(widgetvalue-livetv,4)" />
		<value condition="Skin.String(widgetvalue-livetv,3)" />
		<value condition="Skin.String(widgetvalue-livetv,2)" />
		<value condition="Skin.String(widgetvalue-livetv,1)" />
		<value>19017</value>
	</variable>
	<variable name="5510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=INPROGRESSANDRECOMMENDED&amp;mediatype=MOVIES&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="widgetinfolabel-5510">
		<value condition="String.Contains(Container(5510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5510).ListItem.label] $INFO[Container(5510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Title) + String.Contains(Container(5510).ListItem.FolderPath, pvr://)">$INFO[Container(5510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Season) + !String.IsEmpty(Container(5510).ListItem.Episode) + !String.Contains(Container(5510).ListItem.TvShowTitle,Container(5510).ListItem.Title)">[UPPERCASE]S$INFO[Container(5510).ListItem.Season]E$INFO[Container(5510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Title)">$INFO[Container(5510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Label)">$INFO[Container(5510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5510">
		<value condition="!String.IsEmpty(Container(5510).ListItem.TvShowTitle) + !String.IsEmpty(Container(5510).ListItem.Genre)">$INFO[Container(5510).ListItem.TvShowTitle,, • ]$INFO[Container(5510).ListItem.Year,, • ]$INFO[Container(5510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.TvShowTitle)">$INFO[Container(5510).ListItem.TvShowTitle,, • ]$INFO[Container(5510).ListItem.Premiered,, • ]$INFO[Container(5510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Year)">$INFO[Container(5510).ListItem.Year,, • ]$INFO[Container(5510).ListItem.Duration,,min. • ]$INFO[Container(5510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Artist) + !String.IsEmpty(Container(5510).ListItem.Album)">$INFO[Container(5510).ListItem.Artist,, • ]$INFO[Container(5510).ListItem.Album,, • ]$INFO[Container(5510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Property(StartTime))">$INFO[Container(5510).ListItem.Property(ChannelName),, • ]$INFO[Container(5510).ListItem.Property(StartTime),, - ]$INFO[Container(5510).ListItem.Property(EndTime),, • ]$INFO[Container(5510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.StartTime)">$INFO[Container(5510).ListItem.ChannelName,, • ]$INFO[Container(5510).ListItem.StartTime,, - ]$INFO[Container(5510).ListItem.EndTime,, • ]$INFO[Container(5510).ListItem.Genre]</value>
	</variable>
	<variable name="5520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="widgetinfolabel-5520">
		<value condition="String.Contains(Container(5520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5520).ListItem.label] $INFO[Container(5520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Title) + String.Contains(Container(5520).ListItem.FolderPath, pvr://)">$INFO[Container(5520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Season) + !String.IsEmpty(Container(5520).ListItem.Episode) + !String.Contains(Container(5520).ListItem.TvShowTitle,Container(5520).ListItem.Title)">[UPPERCASE]S$INFO[Container(5520).ListItem.Season]E$INFO[Container(5520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Title)">$INFO[Container(5520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Label)">$INFO[Container(5520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5520">
		<value condition="!String.IsEmpty(Container(5520).ListItem.TvShowTitle) + !String.IsEmpty(Container(5520).ListItem.Genre)">$INFO[Container(5520).ListItem.TvShowTitle,, • ]$INFO[Container(5520).ListItem.Year,, • ]$INFO[Container(5520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.TvShowTitle)">$INFO[Container(5520).ListItem.TvShowTitle,, • ]$INFO[Container(5520).ListItem.Premiered,, • ]$INFO[Container(5520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Year)">$INFO[Container(5520).ListItem.Year,, • ]$INFO[Container(5520).ListItem.Duration,,min. • ]$INFO[Container(5520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Artist) + !String.IsEmpty(Container(5520).ListItem.Album)">$INFO[Container(5520).ListItem.Artist,, • ]$INFO[Container(5520).ListItem.Album,, • ]$INFO[Container(5520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Property(StartTime))">$INFO[Container(5520).ListItem.Property(ChannelName),, • ]$INFO[Container(5520).ListItem.Property(StartTime),, - ]$INFO[Container(5520).ListItem.Property(EndTime),, • ]$INFO[Container(5520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.StartTime)">$INFO[Container(5520).ListItem.ChannelName,, • ]$INFO[Container(5520).ListItem.StartTime,, - ]$INFO[Container(5520).ListItem.EndTime,, • ]$INFO[Container(5520).ListItem.Genre]</value>
	</variable>
	<variable name="5530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-5530">
		<value condition="String.Contains(Container(5530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5530).ListItem.label] $INFO[Container(5530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Title) + String.Contains(Container(5530).ListItem.FolderPath, pvr://)">$INFO[Container(5530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Season) + !String.IsEmpty(Container(5530).ListItem.Episode) + !String.Contains(Container(5530).ListItem.TvShowTitle,Container(5530).ListItem.Title)">[UPPERCASE]S$INFO[Container(5530).ListItem.Season]E$INFO[Container(5530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Title)">$INFO[Container(5530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Label)">$INFO[Container(5530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5530">
		<value condition="!String.IsEmpty(Container(5530).ListItem.TvShowTitle) + !String.IsEmpty(Container(5530).ListItem.Genre)">$INFO[Container(5530).ListItem.TvShowTitle,, • ]$INFO[Container(5530).ListItem.Year,, • ]$INFO[Container(5530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.TvShowTitle)">$INFO[Container(5530).ListItem.TvShowTitle,, • ]$INFO[Container(5530).ListItem.Premiered,, • ]$INFO[Container(5530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Year)">$INFO[Container(5530).ListItem.Year,, • ]$INFO[Container(5530).ListItem.Duration,,min. • ]$INFO[Container(5530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Artist) + !String.IsEmpty(Container(5530).ListItem.Album)">$INFO[Container(5530).ListItem.Artist,, • ]$INFO[Container(5530).ListItem.Album,, • ]$INFO[Container(5530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Property(StartTime))">$INFO[Container(5530).ListItem.Property(ChannelName),, • ]$INFO[Container(5530).ListItem.Property(StartTime),, - ]$INFO[Container(5530).ListItem.Property(EndTime),, • ]$INFO[Container(5530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.StartTime)">$INFO[Container(5530).ListItem.ChannelName,, • ]$INFO[Container(5530).ListItem.StartTime,, - ]$INFO[Container(5530).ListItem.EndTime,, • ]$INFO[Container(5530).ListItem.Genre]</value>
	</variable>
	<variable name="5540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-5540">
		<value condition="String.Contains(Container(5540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5540).ListItem.label] $INFO[Container(5540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Title) + String.Contains(Container(5540).ListItem.FolderPath, pvr://)">$INFO[Container(5540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Season) + !String.IsEmpty(Container(5540).ListItem.Episode) + !String.Contains(Container(5540).ListItem.TvShowTitle,Container(5540).ListItem.Title)">[UPPERCASE]S$INFO[Container(5540).ListItem.Season]E$INFO[Container(5540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Title)">$INFO[Container(5540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Label)">$INFO[Container(5540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5540">
		<value condition="!String.IsEmpty(Container(5540).ListItem.TvShowTitle) + !String.IsEmpty(Container(5540).ListItem.Genre)">$INFO[Container(5540).ListItem.TvShowTitle,, • ]$INFO[Container(5540).ListItem.Year,, • ]$INFO[Container(5540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.TvShowTitle)">$INFO[Container(5540).ListItem.TvShowTitle,, • ]$INFO[Container(5540).ListItem.Premiered,, • ]$INFO[Container(5540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Year)">$INFO[Container(5540).ListItem.Year,, • ]$INFO[Container(5540).ListItem.Duration,,min. • ]$INFO[Container(5540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Artist) + !String.IsEmpty(Container(5540).ListItem.Album)">$INFO[Container(5540).ListItem.Artist,, • ]$INFO[Container(5540).ListItem.Album,, • ]$INFO[Container(5540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Property(StartTime))">$INFO[Container(5540).ListItem.Property(ChannelName),, • ]$INFO[Container(5540).ListItem.Property(StartTime),, - ]$INFO[Container(5540).ListItem.Property(EndTime),, • ]$INFO[Container(5540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.StartTime)">$INFO[Container(5540).ListItem.ChannelName,, • ]$INFO[Container(5540).ListItem.StartTime,, - ]$INFO[Container(5540).ListItem.EndTime,, • ]$INFO[Container(5540).ListItem.Genre]</value>
	</variable>
	<variable name="5550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-5550">
		<value condition="String.Contains(Container(5550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5550).ListItem.label] $INFO[Container(5550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Title) + String.Contains(Container(5550).ListItem.FolderPath, pvr://)">$INFO[Container(5550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Season) + !String.IsEmpty(Container(5550).ListItem.Episode) + !String.Contains(Container(5550).ListItem.TvShowTitle,Container(5550).ListItem.Title)">[UPPERCASE]S$INFO[Container(5550).ListItem.Season]E$INFO[Container(5550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Title)">$INFO[Container(5550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Label)">$INFO[Container(5550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5550">
		<value condition="!String.IsEmpty(Container(5550).ListItem.TvShowTitle) + !String.IsEmpty(Container(5550).ListItem.Genre)">$INFO[Container(5550).ListItem.TvShowTitle,, • ]$INFO[Container(5550).ListItem.Year,, • ]$INFO[Container(5550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.TvShowTitle)">$INFO[Container(5550).ListItem.TvShowTitle,, • ]$INFO[Container(5550).ListItem.Premiered,, • ]$INFO[Container(5550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Year)">$INFO[Container(5550).ListItem.Year,, • ]$INFO[Container(5550).ListItem.Duration,,min. • ]$INFO[Container(5550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Artist) + !String.IsEmpty(Container(5550).ListItem.Album)">$INFO[Container(5550).ListItem.Artist,, • ]$INFO[Container(5550).ListItem.Album,, • ]$INFO[Container(5550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Property(StartTime))">$INFO[Container(5550).ListItem.Property(ChannelName),, • ]$INFO[Container(5550).ListItem.Property(StartTime),, - ]$INFO[Container(5550).ListItem.Property(EndTime),, • ]$INFO[Container(5550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.StartTime)">$INFO[Container(5550).ListItem.ChannelName,, • ]$INFO[Container(5550).ListItem.StartTime,, - ]$INFO[Container(5550).ListItem.EndTime,, • ]$INFO[Container(5550).ListItem.Genre]</value>
	</variable>
	<variable name="5560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-5560">
		<value condition="String.Contains(Container(5560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5560).ListItem.label] $INFO[Container(5560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Title) + String.Contains(Container(5560).ListItem.FolderPath, pvr://)">$INFO[Container(5560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Season) + !String.IsEmpty(Container(5560).ListItem.Episode) + !String.Contains(Container(5560).ListItem.TvShowTitle,Container(5560).ListItem.Title)">[UPPERCASE]S$INFO[Container(5560).ListItem.Season]E$INFO[Container(5560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Title)">$INFO[Container(5560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Label)">$INFO[Container(5560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5560">
		<value condition="!String.IsEmpty(Container(5560).ListItem.TvShowTitle) + !String.IsEmpty(Container(5560).ListItem.Genre)">$INFO[Container(5560).ListItem.TvShowTitle,, • ]$INFO[Container(5560).ListItem.Year,, • ]$INFO[Container(5560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.TvShowTitle)">$INFO[Container(5560).ListItem.TvShowTitle,, • ]$INFO[Container(5560).ListItem.Premiered,, • ]$INFO[Container(5560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Year)">$INFO[Container(5560).ListItem.Year,, • ]$INFO[Container(5560).ListItem.Duration,,min. • ]$INFO[Container(5560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Artist) + !String.IsEmpty(Container(5560).ListItem.Album)">$INFO[Container(5560).ListItem.Artist,, • ]$INFO[Container(5560).ListItem.Album,, • ]$INFO[Container(5560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Property(StartTime))">$INFO[Container(5560).ListItem.Property(ChannelName),, • ]$INFO[Container(5560).ListItem.Property(StartTime),, - ]$INFO[Container(5560).ListItem.Property(EndTime),, • ]$INFO[Container(5560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.StartTime)">$INFO[Container(5560).ListItem.ChannelName,, • ]$INFO[Container(5560).ListItem.StartTime,, - ]$INFO[Container(5560).ListItem.EndTime,, • ]$INFO[Container(5560).ListItem.Genre]</value>
	</variable>
	<variable name="5570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-5570">
		<value condition="String.Contains(Container(5570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5570).ListItem.label] $INFO[Container(5570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Title) + String.Contains(Container(5570).ListItem.FolderPath, pvr://)">$INFO[Container(5570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Season) + !String.IsEmpty(Container(5570).ListItem.Episode) + !String.Contains(Container(5570).ListItem.TvShowTitle,Container(5570).ListItem.Title)">[UPPERCASE]S$INFO[Container(5570).ListItem.Season]E$INFO[Container(5570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Title)">$INFO[Container(5570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Label)">$INFO[Container(5570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5570">
		<value condition="!String.IsEmpty(Container(5570).ListItem.TvShowTitle) + !String.IsEmpty(Container(5570).ListItem.Genre)">$INFO[Container(5570).ListItem.TvShowTitle,, • ]$INFO[Container(5570).ListItem.Year,, • ]$INFO[Container(5570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.TvShowTitle)">$INFO[Container(5570).ListItem.TvShowTitle,, • ]$INFO[Container(5570).ListItem.Premiered,, • ]$INFO[Container(5570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Year)">$INFO[Container(5570).ListItem.Year,, • ]$INFO[Container(5570).ListItem.Duration,,min. • ]$INFO[Container(5570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Artist) + !String.IsEmpty(Container(5570).ListItem.Album)">$INFO[Container(5570).ListItem.Artist,, • ]$INFO[Container(5570).ListItem.Album,, • ]$INFO[Container(5570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Property(StartTime))">$INFO[Container(5570).ListItem.Property(ChannelName),, • ]$INFO[Container(5570).ListItem.Property(StartTime),, - ]$INFO[Container(5570).ListItem.Property(EndTime),, • ]$INFO[Container(5570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.StartTime)">$INFO[Container(5570).ListItem.ChannelName,, • ]$INFO[Container(5570).ListItem.StartTime,, - ]$INFO[Container(5570).ListItem.EndTime,, • ]$INFO[Container(5570).ListItem.Genre]</value>
	</variable>
	<variable name="5580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-5580">
		<value condition="String.Contains(Container(5580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5580).ListItem.label] $INFO[Container(5580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Title) + String.Contains(Container(5580).ListItem.FolderPath, pvr://)">$INFO[Container(5580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Season) + !String.IsEmpty(Container(5580).ListItem.Episode) + !String.Contains(Container(5580).ListItem.TvShowTitle,Container(5580).ListItem.Title)">[UPPERCASE]S$INFO[Container(5580).ListItem.Season]E$INFO[Container(5580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Title)">$INFO[Container(5580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Label)">$INFO[Container(5580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5580">
		<value condition="!String.IsEmpty(Container(5580).ListItem.TvShowTitle) + !String.IsEmpty(Container(5580).ListItem.Genre)">$INFO[Container(5580).ListItem.TvShowTitle,, • ]$INFO[Container(5580).ListItem.Year,, • ]$INFO[Container(5580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.TvShowTitle)">$INFO[Container(5580).ListItem.TvShowTitle,, • ]$INFO[Container(5580).ListItem.Premiered,, • ]$INFO[Container(5580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Year)">$INFO[Container(5580).ListItem.Year,, • ]$INFO[Container(5580).ListItem.Duration,,min. • ]$INFO[Container(5580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Artist) + !String.IsEmpty(Container(5580).ListItem.Album)">$INFO[Container(5580).ListItem.Artist,, • ]$INFO[Container(5580).ListItem.Album,, • ]$INFO[Container(5580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Property(StartTime))">$INFO[Container(5580).ListItem.Property(ChannelName),, • ]$INFO[Container(5580).ListItem.Property(StartTime),, - ]$INFO[Container(5580).ListItem.Property(EndTime),, • ]$INFO[Container(5580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.StartTime)">$INFO[Container(5580).ListItem.ChannelName,, • ]$INFO[Container(5580).ListItem.StartTime,, - ]$INFO[Container(5580).ListItem.EndTime,, • ]$INFO[Container(5580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-5">
		<value condition="Skin.String(widgetvalue-movies,7)" />
		<value condition="Skin.String(widgetvalue-movies,6)" />
		<value condition="Skin.String(widgetvalue-movies,5)" />
		<value condition="Skin.String(widgetvalue-movies,4)" />
		<value condition="Skin.String(widgetvalue-movies,3)" />
		<value condition="Skin.String(widgetvalue-movies,2)" />
		<value condition="Skin.String(widgetvalue-movies,1)">20386</value>
		<value>$ADDON[script.skin.helper.widgets 32029]</value>
	</variable>
	<variable name="6510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=next&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="widgetinfolabel-6510">
		<value condition="String.Contains(Container(6510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6510).ListItem.label] $INFO[Container(6510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.Title) + String.Contains(Container(6510).ListItem.FolderPath, pvr://)">$INFO[Container(6510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.Season) + !String.IsEmpty(Container(6510).ListItem.Episode) + !String.Contains(Container(6510).ListItem.TvShowTitle,Container(6510).ListItem.Title)">[UPPERCASE]S$INFO[Container(6510).ListItem.Season]E$INFO[Container(6510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.Title)">$INFO[Container(6510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.Label)">$INFO[Container(6510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-6510">
		<value condition="!String.IsEmpty(Container(6510).ListItem.TvShowTitle) + !String.IsEmpty(Container(6510).ListItem.Genre)">$INFO[Container(6510).ListItem.TvShowTitle,, • ]$INFO[Container(6510).ListItem.Year,, • ]$INFO[Container(6510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.TvShowTitle)">$INFO[Container(6510).ListItem.TvShowTitle,, • ]$INFO[Container(6510).ListItem.Premiered,, • ]$INFO[Container(6510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.Year)">$INFO[Container(6510).ListItem.Year,, • ]$INFO[Container(6510).ListItem.Duration,,min. • ]$INFO[Container(6510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.Artist) + !String.IsEmpty(Container(6510).ListItem.Album)">$INFO[Container(6510).ListItem.Artist,, • ]$INFO[Container(6510).ListItem.Album,, • ]$INFO[Container(6510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.Property(StartTime))">$INFO[Container(6510).ListItem.Property(ChannelName),, • ]$INFO[Container(6510).ListItem.Property(StartTime),, - ]$INFO[Container(6510).ListItem.Property(EndTime),, • ]$INFO[Container(6510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.StartTime)">$INFO[Container(6510).ListItem.ChannelName,, • ]$INFO[Container(6510).ListItem.StartTime,, - ]$INFO[Container(6510).ListItem.EndTime,, • ]$INFO[Container(6510).ListItem.Genre]</value>
	</variable>
	<variable name="6520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="widgetinfolabel-6520">
		<value condition="String.Contains(Container(6520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6520).ListItem.label] $INFO[Container(6520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.Title) + String.Contains(Container(6520).ListItem.FolderPath, pvr://)">$INFO[Container(6520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.Season) + !String.IsEmpty(Container(6520).ListItem.Episode) + !String.Contains(Container(6520).ListItem.TvShowTitle,Container(6520).ListItem.Title)">[UPPERCASE]S$INFO[Container(6520).ListItem.Season]E$INFO[Container(6520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.Title)">$INFO[Container(6520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.Label)">$INFO[Container(6520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-6520">
		<value condition="!String.IsEmpty(Container(6520).ListItem.TvShowTitle) + !String.IsEmpty(Container(6520).ListItem.Genre)">$INFO[Container(6520).ListItem.TvShowTitle,, • ]$INFO[Container(6520).ListItem.Year,, • ]$INFO[Container(6520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.TvShowTitle)">$INFO[Container(6520).ListItem.TvShowTitle,, • ]$INFO[Container(6520).ListItem.Premiered,, • ]$INFO[Container(6520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.Year)">$INFO[Container(6520).ListItem.Year,, • ]$INFO[Container(6520).ListItem.Duration,,min. • ]$INFO[Container(6520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.Artist) + !String.IsEmpty(Container(6520).ListItem.Album)">$INFO[Container(6520).ListItem.Artist,, • ]$INFO[Container(6520).ListItem.Album,, • ]$INFO[Container(6520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.Property(StartTime))">$INFO[Container(6520).ListItem.Property(ChannelName),, • ]$INFO[Container(6520).ListItem.Property(StartTime),, - ]$INFO[Container(6520).ListItem.Property(EndTime),, • ]$INFO[Container(6520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.StartTime)">$INFO[Container(6520).ListItem.ChannelName,, • ]$INFO[Container(6520).ListItem.StartTime,, - ]$INFO[Container(6520).ListItem.EndTime,, • ]$INFO[Container(6520).ListItem.Genre]</value>
	</variable>
	<variable name="6530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-6530">
		<value condition="String.Contains(Container(6530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6530).ListItem.label] $INFO[Container(6530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.Title) + String.Contains(Container(6530).ListItem.FolderPath, pvr://)">$INFO[Container(6530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.Season) + !String.IsEmpty(Container(6530).ListItem.Episode) + !String.Contains(Container(6530).ListItem.TvShowTitle,Container(6530).ListItem.Title)">[UPPERCASE]S$INFO[Container(6530).ListItem.Season]E$INFO[Container(6530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.Title)">$INFO[Container(6530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.Label)">$INFO[Container(6530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-6530">
		<value condition="!String.IsEmpty(Container(6530).ListItem.TvShowTitle) + !String.IsEmpty(Container(6530).ListItem.Genre)">$INFO[Container(6530).ListItem.TvShowTitle,, • ]$INFO[Container(6530).ListItem.Year,, • ]$INFO[Container(6530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.TvShowTitle)">$INFO[Container(6530).ListItem.TvShowTitle,, • ]$INFO[Container(6530).ListItem.Premiered,, • ]$INFO[Container(6530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.Year)">$INFO[Container(6530).ListItem.Year,, • ]$INFO[Container(6530).ListItem.Duration,,min. • ]$INFO[Container(6530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.Artist) + !String.IsEmpty(Container(6530).ListItem.Album)">$INFO[Container(6530).ListItem.Artist,, • ]$INFO[Container(6530).ListItem.Album,, • ]$INFO[Container(6530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.Property(StartTime))">$INFO[Container(6530).ListItem.Property(ChannelName),, • ]$INFO[Container(6530).ListItem.Property(StartTime),, - ]$INFO[Container(6530).ListItem.Property(EndTime),, • ]$INFO[Container(6530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.StartTime)">$INFO[Container(6530).ListItem.ChannelName,, • ]$INFO[Container(6530).ListItem.StartTime,, - ]$INFO[Container(6530).ListItem.EndTime,, • ]$INFO[Container(6530).ListItem.Genre]</value>
	</variable>
	<variable name="6540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-6540">
		<value condition="String.Contains(Container(6540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6540).ListItem.label] $INFO[Container(6540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.Title) + String.Contains(Container(6540).ListItem.FolderPath, pvr://)">$INFO[Container(6540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.Season) + !String.IsEmpty(Container(6540).ListItem.Episode) + !String.Contains(Container(6540).ListItem.TvShowTitle,Container(6540).ListItem.Title)">[UPPERCASE]S$INFO[Container(6540).ListItem.Season]E$INFO[Container(6540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.Title)">$INFO[Container(6540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.Label)">$INFO[Container(6540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-6540">
		<value condition="!String.IsEmpty(Container(6540).ListItem.TvShowTitle) + !String.IsEmpty(Container(6540).ListItem.Genre)">$INFO[Container(6540).ListItem.TvShowTitle,, • ]$INFO[Container(6540).ListItem.Year,, • ]$INFO[Container(6540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.TvShowTitle)">$INFO[Container(6540).ListItem.TvShowTitle,, • ]$INFO[Container(6540).ListItem.Premiered,, • ]$INFO[Container(6540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.Year)">$INFO[Container(6540).ListItem.Year,, • ]$INFO[Container(6540).ListItem.Duration,,min. • ]$INFO[Container(6540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.Artist) + !String.IsEmpty(Container(6540).ListItem.Album)">$INFO[Container(6540).ListItem.Artist,, • ]$INFO[Container(6540).ListItem.Album,, • ]$INFO[Container(6540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.Property(StartTime))">$INFO[Container(6540).ListItem.Property(ChannelName),, • ]$INFO[Container(6540).ListItem.Property(StartTime),, - ]$INFO[Container(6540).ListItem.Property(EndTime),, • ]$INFO[Container(6540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.StartTime)">$INFO[Container(6540).ListItem.ChannelName,, • ]$INFO[Container(6540).ListItem.StartTime,, - ]$INFO[Container(6540).ListItem.EndTime,, • ]$INFO[Container(6540).ListItem.Genre]</value>
	</variable>
	<variable name="6550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-6550">
		<value condition="String.Contains(Container(6550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6550).ListItem.label] $INFO[Container(6550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.Title) + String.Contains(Container(6550).ListItem.FolderPath, pvr://)">$INFO[Container(6550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.Season) + !String.IsEmpty(Container(6550).ListItem.Episode) + !String.Contains(Container(6550).ListItem.TvShowTitle,Container(6550).ListItem.Title)">[UPPERCASE]S$INFO[Container(6550).ListItem.Season]E$INFO[Container(6550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.Title)">$INFO[Container(6550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.Label)">$INFO[Container(6550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-6550">
		<value condition="!String.IsEmpty(Container(6550).ListItem.TvShowTitle) + !String.IsEmpty(Container(6550).ListItem.Genre)">$INFO[Container(6550).ListItem.TvShowTitle,, • ]$INFO[Container(6550).ListItem.Year,, • ]$INFO[Container(6550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.TvShowTitle)">$INFO[Container(6550).ListItem.TvShowTitle,, • ]$INFO[Container(6550).ListItem.Premiered,, • ]$INFO[Container(6550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.Year)">$INFO[Container(6550).ListItem.Year,, • ]$INFO[Container(6550).ListItem.Duration,,min. • ]$INFO[Container(6550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.Artist) + !String.IsEmpty(Container(6550).ListItem.Album)">$INFO[Container(6550).ListItem.Artist,, • ]$INFO[Container(6550).ListItem.Album,, • ]$INFO[Container(6550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.Property(StartTime))">$INFO[Container(6550).ListItem.Property(ChannelName),, • ]$INFO[Container(6550).ListItem.Property(StartTime),, - ]$INFO[Container(6550).ListItem.Property(EndTime),, • ]$INFO[Container(6550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.StartTime)">$INFO[Container(6550).ListItem.ChannelName,, • ]$INFO[Container(6550).ListItem.StartTime,, - ]$INFO[Container(6550).ListItem.EndTime,, • ]$INFO[Container(6550).ListItem.Genre]</value>
	</variable>
	<variable name="6560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-6560">
		<value condition="String.Contains(Container(6560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6560).ListItem.label] $INFO[Container(6560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.Title) + String.Contains(Container(6560).ListItem.FolderPath, pvr://)">$INFO[Container(6560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.Season) + !String.IsEmpty(Container(6560).ListItem.Episode) + !String.Contains(Container(6560).ListItem.TvShowTitle,Container(6560).ListItem.Title)">[UPPERCASE]S$INFO[Container(6560).ListItem.Season]E$INFO[Container(6560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.Title)">$INFO[Container(6560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.Label)">$INFO[Container(6560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-6560">
		<value condition="!String.IsEmpty(Container(6560).ListItem.TvShowTitle) + !String.IsEmpty(Container(6560).ListItem.Genre)">$INFO[Container(6560).ListItem.TvShowTitle,, • ]$INFO[Container(6560).ListItem.Year,, • ]$INFO[Container(6560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.TvShowTitle)">$INFO[Container(6560).ListItem.TvShowTitle,, • ]$INFO[Container(6560).ListItem.Premiered,, • ]$INFO[Container(6560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.Year)">$INFO[Container(6560).ListItem.Year,, • ]$INFO[Container(6560).ListItem.Duration,,min. • ]$INFO[Container(6560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.Artist) + !String.IsEmpty(Container(6560).ListItem.Album)">$INFO[Container(6560).ListItem.Artist,, • ]$INFO[Container(6560).ListItem.Album,, • ]$INFO[Container(6560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.Property(StartTime))">$INFO[Container(6560).ListItem.Property(ChannelName),, • ]$INFO[Container(6560).ListItem.Property(StartTime),, - ]$INFO[Container(6560).ListItem.Property(EndTime),, • ]$INFO[Container(6560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.StartTime)">$INFO[Container(6560).ListItem.ChannelName,, • ]$INFO[Container(6560).ListItem.StartTime,, - ]$INFO[Container(6560).ListItem.EndTime,, • ]$INFO[Container(6560).ListItem.Genre]</value>
	</variable>
	<variable name="6570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-6570">
		<value condition="String.Contains(Container(6570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6570).ListItem.label] $INFO[Container(6570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.Title) + String.Contains(Container(6570).ListItem.FolderPath, pvr://)">$INFO[Container(6570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.Season) + !String.IsEmpty(Container(6570).ListItem.Episode) + !String.Contains(Container(6570).ListItem.TvShowTitle,Container(6570).ListItem.Title)">[UPPERCASE]S$INFO[Container(6570).ListItem.Season]E$INFO[Container(6570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.Title)">$INFO[Container(6570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.Label)">$INFO[Container(6570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-6570">
		<value condition="!String.IsEmpty(Container(6570).ListItem.TvShowTitle) + !String.IsEmpty(Container(6570).ListItem.Genre)">$INFO[Container(6570).ListItem.TvShowTitle,, • ]$INFO[Container(6570).ListItem.Year,, • ]$INFO[Container(6570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.TvShowTitle)">$INFO[Container(6570).ListItem.TvShowTitle,, • ]$INFO[Container(6570).ListItem.Premiered,, • ]$INFO[Container(6570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.Year)">$INFO[Container(6570).ListItem.Year,, • ]$INFO[Container(6570).ListItem.Duration,,min. • ]$INFO[Container(6570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.Artist) + !String.IsEmpty(Container(6570).ListItem.Album)">$INFO[Container(6570).ListItem.Artist,, • ]$INFO[Container(6570).ListItem.Album,, • ]$INFO[Container(6570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.Property(StartTime))">$INFO[Container(6570).ListItem.Property(ChannelName),, • ]$INFO[Container(6570).ListItem.Property(StartTime),, - ]$INFO[Container(6570).ListItem.Property(EndTime),, • ]$INFO[Container(6570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.StartTime)">$INFO[Container(6570).ListItem.ChannelName,, • ]$INFO[Container(6570).ListItem.StartTime,, - ]$INFO[Container(6570).ListItem.EndTime,, • ]$INFO[Container(6570).ListItem.Genre]</value>
	</variable>
	<variable name="6580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-6580">
		<value condition="String.Contains(Container(6580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6580).ListItem.label] $INFO[Container(6580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.Title) + String.Contains(Container(6580).ListItem.FolderPath, pvr://)">$INFO[Container(6580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.Season) + !String.IsEmpty(Container(6580).ListItem.Episode) + !String.Contains(Container(6580).ListItem.TvShowTitle,Container(6580).ListItem.Title)">[UPPERCASE]S$INFO[Container(6580).ListItem.Season]E$INFO[Container(6580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.Title)">$INFO[Container(6580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.Label)">$INFO[Container(6580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-6580">
		<value condition="!String.IsEmpty(Container(6580).ListItem.TvShowTitle) + !String.IsEmpty(Container(6580).ListItem.Genre)">$INFO[Container(6580).ListItem.TvShowTitle,, • ]$INFO[Container(6580).ListItem.Year,, • ]$INFO[Container(6580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.TvShowTitle)">$INFO[Container(6580).ListItem.TvShowTitle,, • ]$INFO[Container(6580).ListItem.Premiered,, • ]$INFO[Container(6580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.Year)">$INFO[Container(6580).ListItem.Year,, • ]$INFO[Container(6580).ListItem.Duration,,min. • ]$INFO[Container(6580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.Artist) + !String.IsEmpty(Container(6580).ListItem.Album)">$INFO[Container(6580).ListItem.Artist,, • ]$INFO[Container(6580).ListItem.Album,, • ]$INFO[Container(6580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.Property(StartTime))">$INFO[Container(6580).ListItem.Property(ChannelName),, • ]$INFO[Container(6580).ListItem.Property(StartTime),, - ]$INFO[Container(6580).ListItem.Property(EndTime),, • ]$INFO[Container(6580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.StartTime)">$INFO[Container(6580).ListItem.ChannelName,, • ]$INFO[Container(6580).ListItem.StartTime,, - ]$INFO[Container(6580).ListItem.EndTime,, • ]$INFO[Container(6580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-6">
		<value condition="Skin.String(widgetvalue-tvshows,7)" />
		<value condition="Skin.String(widgetvalue-tvshows,6)" />
		<value condition="Skin.String(widgetvalue-tvshows,5)" />
		<value condition="Skin.String(widgetvalue-tvshows,4)" />
		<value condition="Skin.String(widgetvalue-tvshows,3)" />
		<value condition="Skin.String(widgetvalue-tvshows,2)" />
		<value condition="Skin.String(widgetvalue-tvshows,1)">20387</value>
		<value>$ADDON[script.skin.helper.widgets 32002]</value>
	</variable>
	<variable name="8510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=albums&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreloadmusic)]</value>
	</variable>
	<variable name="widgetinfolabel-8510">
		<value condition="String.Contains(Container(8510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8510).ListItem.label] $INFO[Container(8510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.Title) + String.Contains(Container(8510).ListItem.FolderPath, pvr://)">$INFO[Container(8510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.Season) + !String.IsEmpty(Container(8510).ListItem.Episode) + !String.Contains(Container(8510).ListItem.TvShowTitle,Container(8510).ListItem.Title)">[UPPERCASE]S$INFO[Container(8510).ListItem.Season]E$INFO[Container(8510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.Title)">$INFO[Container(8510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.Label)">$INFO[Container(8510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8510">
		<value condition="!String.IsEmpty(Container(8510).ListItem.TvShowTitle) + !String.IsEmpty(Container(8510).ListItem.Genre)">$INFO[Container(8510).ListItem.TvShowTitle,, • ]$INFO[Container(8510).ListItem.Year,, • ]$INFO[Container(8510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.TvShowTitle)">$INFO[Container(8510).ListItem.TvShowTitle,, • ]$INFO[Container(8510).ListItem.Premiered,, • ]$INFO[Container(8510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.Year)">$INFO[Container(8510).ListItem.Year,, • ]$INFO[Container(8510).ListItem.Duration,,min. • ]$INFO[Container(8510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.Artist) + !String.IsEmpty(Container(8510).ListItem.Album)">$INFO[Container(8510).ListItem.Artist,, • ]$INFO[Container(8510).ListItem.Album,, • ]$INFO[Container(8510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.Property(StartTime))">$INFO[Container(8510).ListItem.Property(ChannelName),, • ]$INFO[Container(8510).ListItem.Property(StartTime),, - ]$INFO[Container(8510).ListItem.Property(EndTime),, • ]$INFO[Container(8510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.StartTime)">$INFO[Container(8510).ListItem.ChannelName,, • ]$INFO[Container(8510).ListItem.StartTime,, - ]$INFO[Container(8510).ListItem.EndTime,, • ]$INFO[Container(8510).ListItem.Genre]</value>
	</variable>
	<variable name="8520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=songs&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreloadmusic)]</value>
	</variable>
	<variable name="widgetinfolabel-8520">
		<value condition="String.Contains(Container(8520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8520).ListItem.label] $INFO[Container(8520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.Title) + String.Contains(Container(8520).ListItem.FolderPath, pvr://)">$INFO[Container(8520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.Season) + !String.IsEmpty(Container(8520).ListItem.Episode) + !String.Contains(Container(8520).ListItem.TvShowTitle,Container(8520).ListItem.Title)">[UPPERCASE]S$INFO[Container(8520).ListItem.Season]E$INFO[Container(8520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.Title)">$INFO[Container(8520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.Label)">$INFO[Container(8520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8520">
		<value condition="!String.IsEmpty(Container(8520).ListItem.TvShowTitle) + !String.IsEmpty(Container(8520).ListItem.Genre)">$INFO[Container(8520).ListItem.TvShowTitle,, • ]$INFO[Container(8520).ListItem.Year,, • ]$INFO[Container(8520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.TvShowTitle)">$INFO[Container(8520).ListItem.TvShowTitle,, • ]$INFO[Container(8520).ListItem.Premiered,, • ]$INFO[Container(8520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.Year)">$INFO[Container(8520).ListItem.Year,, • ]$INFO[Container(8520).ListItem.Duration,,min. • ]$INFO[Container(8520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.Artist) + !String.IsEmpty(Container(8520).ListItem.Album)">$INFO[Container(8520).ListItem.Artist,, • ]$INFO[Container(8520).ListItem.Album,, • ]$INFO[Container(8520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.Property(StartTime))">$INFO[Container(8520).ListItem.Property(ChannelName),, • ]$INFO[Container(8520).ListItem.Property(StartTime),, - ]$INFO[Container(8520).ListItem.Property(EndTime),, • ]$INFO[Container(8520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.StartTime)">$INFO[Container(8520).ListItem.ChannelName,, • ]$INFO[Container(8520).ListItem.StartTime,, - ]$INFO[Container(8520).ListItem.EndTime,, • ]$INFO[Container(8520).ListItem.Genre]</value>
	</variable>
	<variable name="8530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8530">
		<value condition="String.Contains(Container(8530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8530).ListItem.label] $INFO[Container(8530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.Title) + String.Contains(Container(8530).ListItem.FolderPath, pvr://)">$INFO[Container(8530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.Season) + !String.IsEmpty(Container(8530).ListItem.Episode) + !String.Contains(Container(8530).ListItem.TvShowTitle,Container(8530).ListItem.Title)">[UPPERCASE]S$INFO[Container(8530).ListItem.Season]E$INFO[Container(8530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.Title)">$INFO[Container(8530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.Label)">$INFO[Container(8530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8530">
		<value condition="!String.IsEmpty(Container(8530).ListItem.TvShowTitle) + !String.IsEmpty(Container(8530).ListItem.Genre)">$INFO[Container(8530).ListItem.TvShowTitle,, • ]$INFO[Container(8530).ListItem.Year,, • ]$INFO[Container(8530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.TvShowTitle)">$INFO[Container(8530).ListItem.TvShowTitle,, • ]$INFO[Container(8530).ListItem.Premiered,, • ]$INFO[Container(8530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.Year)">$INFO[Container(8530).ListItem.Year,, • ]$INFO[Container(8530).ListItem.Duration,,min. • ]$INFO[Container(8530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.Artist) + !String.IsEmpty(Container(8530).ListItem.Album)">$INFO[Container(8530).ListItem.Artist,, • ]$INFO[Container(8530).ListItem.Album,, • ]$INFO[Container(8530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.Property(StartTime))">$INFO[Container(8530).ListItem.Property(ChannelName),, • ]$INFO[Container(8530).ListItem.Property(StartTime),, - ]$INFO[Container(8530).ListItem.Property(EndTime),, • ]$INFO[Container(8530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.StartTime)">$INFO[Container(8530).ListItem.ChannelName,, • ]$INFO[Container(8530).ListItem.StartTime,, - ]$INFO[Container(8530).ListItem.EndTime,, • ]$INFO[Container(8530).ListItem.Genre]</value>
	</variable>
	<variable name="8540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8540">
		<value condition="String.Contains(Container(8540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8540).ListItem.label] $INFO[Container(8540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.Title) + String.Contains(Container(8540).ListItem.FolderPath, pvr://)">$INFO[Container(8540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.Season) + !String.IsEmpty(Container(8540).ListItem.Episode) + !String.Contains(Container(8540).ListItem.TvShowTitle,Container(8540).ListItem.Title)">[UPPERCASE]S$INFO[Container(8540).ListItem.Season]E$INFO[Container(8540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.Title)">$INFO[Container(8540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.Label)">$INFO[Container(8540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8540">
		<value condition="!String.IsEmpty(Container(8540).ListItem.TvShowTitle) + !String.IsEmpty(Container(8540).ListItem.Genre)">$INFO[Container(8540).ListItem.TvShowTitle,, • ]$INFO[Container(8540).ListItem.Year,, • ]$INFO[Container(8540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.TvShowTitle)">$INFO[Container(8540).ListItem.TvShowTitle,, • ]$INFO[Container(8540).ListItem.Premiered,, • ]$INFO[Container(8540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.Year)">$INFO[Container(8540).ListItem.Year,, • ]$INFO[Container(8540).ListItem.Duration,,min. • ]$INFO[Container(8540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.Artist) + !String.IsEmpty(Container(8540).ListItem.Album)">$INFO[Container(8540).ListItem.Artist,, • ]$INFO[Container(8540).ListItem.Album,, • ]$INFO[Container(8540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.Property(StartTime))">$INFO[Container(8540).ListItem.Property(ChannelName),, • ]$INFO[Container(8540).ListItem.Property(StartTime),, - ]$INFO[Container(8540).ListItem.Property(EndTime),, • ]$INFO[Container(8540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.StartTime)">$INFO[Container(8540).ListItem.ChannelName,, • ]$INFO[Container(8540).ListItem.StartTime,, - ]$INFO[Container(8540).ListItem.EndTime,, • ]$INFO[Container(8540).ListItem.Genre]</value>
	</variable>
	<variable name="8550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8550">
		<value condition="String.Contains(Container(8550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8550).ListItem.label] $INFO[Container(8550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.Title) + String.Contains(Container(8550).ListItem.FolderPath, pvr://)">$INFO[Container(8550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.Season) + !String.IsEmpty(Container(8550).ListItem.Episode) + !String.Contains(Container(8550).ListItem.TvShowTitle,Container(8550).ListItem.Title)">[UPPERCASE]S$INFO[Container(8550).ListItem.Season]E$INFO[Container(8550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.Title)">$INFO[Container(8550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.Label)">$INFO[Container(8550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8550">
		<value condition="!String.IsEmpty(Container(8550).ListItem.TvShowTitle) + !String.IsEmpty(Container(8550).ListItem.Genre)">$INFO[Container(8550).ListItem.TvShowTitle,, • ]$INFO[Container(8550).ListItem.Year,, • ]$INFO[Container(8550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.TvShowTitle)">$INFO[Container(8550).ListItem.TvShowTitle,, • ]$INFO[Container(8550).ListItem.Premiered,, • ]$INFO[Container(8550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.Year)">$INFO[Container(8550).ListItem.Year,, • ]$INFO[Container(8550).ListItem.Duration,,min. • ]$INFO[Container(8550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.Artist) + !String.IsEmpty(Container(8550).ListItem.Album)">$INFO[Container(8550).ListItem.Artist,, • ]$INFO[Container(8550).ListItem.Album,, • ]$INFO[Container(8550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.Property(StartTime))">$INFO[Container(8550).ListItem.Property(ChannelName),, • ]$INFO[Container(8550).ListItem.Property(StartTime),, - ]$INFO[Container(8550).ListItem.Property(EndTime),, • ]$INFO[Container(8550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.StartTime)">$INFO[Container(8550).ListItem.ChannelName,, • ]$INFO[Container(8550).ListItem.StartTime,, - ]$INFO[Container(8550).ListItem.EndTime,, • ]$INFO[Container(8550).ListItem.Genre]</value>
	</variable>
	<variable name="8560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8560">
		<value condition="String.Contains(Container(8560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8560).ListItem.label] $INFO[Container(8560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.Title) + String.Contains(Container(8560).ListItem.FolderPath, pvr://)">$INFO[Container(8560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.Season) + !String.IsEmpty(Container(8560).ListItem.Episode) + !String.Contains(Container(8560).ListItem.TvShowTitle,Container(8560).ListItem.Title)">[UPPERCASE]S$INFO[Container(8560).ListItem.Season]E$INFO[Container(8560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.Title)">$INFO[Container(8560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.Label)">$INFO[Container(8560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8560">
		<value condition="!String.IsEmpty(Container(8560).ListItem.TvShowTitle) + !String.IsEmpty(Container(8560).ListItem.Genre)">$INFO[Container(8560).ListItem.TvShowTitle,, • ]$INFO[Container(8560).ListItem.Year,, • ]$INFO[Container(8560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.TvShowTitle)">$INFO[Container(8560).ListItem.TvShowTitle,, • ]$INFO[Container(8560).ListItem.Premiered,, • ]$INFO[Container(8560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.Year)">$INFO[Container(8560).ListItem.Year,, • ]$INFO[Container(8560).ListItem.Duration,,min. • ]$INFO[Container(8560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.Artist) + !String.IsEmpty(Container(8560).ListItem.Album)">$INFO[Container(8560).ListItem.Artist,, • ]$INFO[Container(8560).ListItem.Album,, • ]$INFO[Container(8560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.Property(StartTime))">$INFO[Container(8560).ListItem.Property(ChannelName),, • ]$INFO[Container(8560).ListItem.Property(StartTime),, - ]$INFO[Container(8560).ListItem.Property(EndTime),, • ]$INFO[Container(8560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.StartTime)">$INFO[Container(8560).ListItem.ChannelName,, • ]$INFO[Container(8560).ListItem.StartTime,, - ]$INFO[Container(8560).ListItem.EndTime,, • ]$INFO[Container(8560).ListItem.Genre]</value>
	</variable>
	<variable name="8570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8570">
		<value condition="String.Contains(Container(8570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8570).ListItem.label] $INFO[Container(8570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.Title) + String.Contains(Container(8570).ListItem.FolderPath, pvr://)">$INFO[Container(8570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.Season) + !String.IsEmpty(Container(8570).ListItem.Episode) + !String.Contains(Container(8570).ListItem.TvShowTitle,Container(8570).ListItem.Title)">[UPPERCASE]S$INFO[Container(8570).ListItem.Season]E$INFO[Container(8570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.Title)">$INFO[Container(8570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.Label)">$INFO[Container(8570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8570">
		<value condition="!String.IsEmpty(Container(8570).ListItem.TvShowTitle) + !String.IsEmpty(Container(8570).ListItem.Genre)">$INFO[Container(8570).ListItem.TvShowTitle,, • ]$INFO[Container(8570).ListItem.Year,, • ]$INFO[Container(8570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.TvShowTitle)">$INFO[Container(8570).ListItem.TvShowTitle,, • ]$INFO[Container(8570).ListItem.Premiered,, • ]$INFO[Container(8570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.Year)">$INFO[Container(8570).ListItem.Year,, • ]$INFO[Container(8570).ListItem.Duration,,min. • ]$INFO[Container(8570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.Artist) + !String.IsEmpty(Container(8570).ListItem.Album)">$INFO[Container(8570).ListItem.Artist,, • ]$INFO[Container(8570).ListItem.Album,, • ]$INFO[Container(8570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.Property(StartTime))">$INFO[Container(8570).ListItem.Property(ChannelName),, • ]$INFO[Container(8570).ListItem.Property(StartTime),, - ]$INFO[Container(8570).ListItem.Property(EndTime),, • ]$INFO[Container(8570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.StartTime)">$INFO[Container(8570).ListItem.ChannelName,, • ]$INFO[Container(8570).ListItem.StartTime,, - ]$INFO[Container(8570).ListItem.EndTime,, • ]$INFO[Container(8570).ListItem.Genre]</value>
	</variable>
	<variable name="8580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8580">
		<value condition="String.Contains(Container(8580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8580).ListItem.label] $INFO[Container(8580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.Title) + String.Contains(Container(8580).ListItem.FolderPath, pvr://)">$INFO[Container(8580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.Season) + !String.IsEmpty(Container(8580).ListItem.Episode) + !String.Contains(Container(8580).ListItem.TvShowTitle,Container(8580).ListItem.Title)">[UPPERCASE]S$INFO[Container(8580).ListItem.Season]E$INFO[Container(8580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.Title)">$INFO[Container(8580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.Label)">$INFO[Container(8580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8580">
		<value condition="!String.IsEmpty(Container(8580).ListItem.TvShowTitle) + !String.IsEmpty(Container(8580).ListItem.Genre)">$INFO[Container(8580).ListItem.TvShowTitle,, • ]$INFO[Container(8580).ListItem.Year,, • ]$INFO[Container(8580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.TvShowTitle)">$INFO[Container(8580).ListItem.TvShowTitle,, • ]$INFO[Container(8580).ListItem.Premiered,, • ]$INFO[Container(8580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.Year)">$INFO[Container(8580).ListItem.Year,, • ]$INFO[Container(8580).ListItem.Duration,,min. • ]$INFO[Container(8580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.Artist) + !String.IsEmpty(Container(8580).ListItem.Album)">$INFO[Container(8580).ListItem.Artist,, • ]$INFO[Container(8580).ListItem.Album,, • ]$INFO[Container(8580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.Property(StartTime))">$INFO[Container(8580).ListItem.Property(ChannelName),, • ]$INFO[Container(8580).ListItem.Property(StartTime),, - ]$INFO[Container(8580).ListItem.Property(EndTime),, • ]$INFO[Container(8580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.StartTime)">$INFO[Container(8580).ListItem.ChannelName,, • ]$INFO[Container(8580).ListItem.StartTime,, - ]$INFO[Container(8580).ListItem.EndTime,, • ]$INFO[Container(8580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-8">
		<value condition="Skin.String(widgetvalue-plugin-audio-tuneinradio,7)" />
		<value condition="Skin.String(widgetvalue-plugin-audio-tuneinradio,6)" />
		<value condition="Skin.String(widgetvalue-plugin-audio-tuneinradio,5)" />
		<value condition="Skin.String(widgetvalue-plugin-audio-tuneinradio,4)" />
		<value condition="Skin.String(widgetvalue-plugin-audio-tuneinradio,3)" />
		<value condition="Skin.String(widgetvalue-plugin-audio-tuneinradio,2)" />
		<value condition="Skin.String(widgetvalue-plugin-audio-tuneinradio,1)">$ADDON[script.skin.helper.widgets 32012]</value>
		<value>359</value>
	</variable>
	<variable name="10510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-10510">
		<value condition="String.Contains(Container(10510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(10510).ListItem.label] $INFO[Container(10510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(10510).ListItem.Title) + String.Contains(Container(10510).ListItem.FolderPath, pvr://)">$INFO[Container(10510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10510).ListItem.Season) + !String.IsEmpty(Container(10510).ListItem.Episode) + !String.Contains(Container(10510).ListItem.TvShowTitle,Container(10510).ListItem.Title)">[UPPERCASE]S$INFO[Container(10510).ListItem.Season]E$INFO[Container(10510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(10510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10510).ListItem.Title)">$INFO[Container(10510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10510).ListItem.Label)">$INFO[Container(10510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-10510">
		<value condition="!String.IsEmpty(Container(10510).ListItem.TvShowTitle) + !String.IsEmpty(Container(10510).ListItem.Genre)">$INFO[Container(10510).ListItem.TvShowTitle,, • ]$INFO[Container(10510).ListItem.Year,, • ]$INFO[Container(10510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10510).ListItem.TvShowTitle)">$INFO[Container(10510).ListItem.TvShowTitle,, • ]$INFO[Container(10510).ListItem.Premiered,, • ]$INFO[Container(10510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(10510).ListItem.Year)">$INFO[Container(10510).ListItem.Year,, • ]$INFO[Container(10510).ListItem.Duration,,min. • ]$INFO[Container(10510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10510).ListItem.Artist) + !String.IsEmpty(Container(10510).ListItem.Album)">$INFO[Container(10510).ListItem.Artist,, • ]$INFO[Container(10510).ListItem.Album,, • ]$INFO[Container(10510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(10510).ListItem.Property(StartTime))">$INFO[Container(10510).ListItem.Property(ChannelName),, • ]$INFO[Container(10510).ListItem.Property(StartTime),, - ]$INFO[Container(10510).ListItem.Property(EndTime),, • ]$INFO[Container(10510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10510).ListItem.StartTime)">$INFO[Container(10510).ListItem.ChannelName,, • ]$INFO[Container(10510).ListItem.StartTime,, - ]$INFO[Container(10510).ListItem.EndTime,, • ]$INFO[Container(10510).ListItem.Genre]</value>
	</variable>
	<variable name="10520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-10520">
		<value condition="String.Contains(Container(10520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(10520).ListItem.label] $INFO[Container(10520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(10520).ListItem.Title) + String.Contains(Container(10520).ListItem.FolderPath, pvr://)">$INFO[Container(10520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10520).ListItem.Season) + !String.IsEmpty(Container(10520).ListItem.Episode) + !String.Contains(Container(10520).ListItem.TvShowTitle,Container(10520).ListItem.Title)">[UPPERCASE]S$INFO[Container(10520).ListItem.Season]E$INFO[Container(10520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(10520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10520).ListItem.Title)">$INFO[Container(10520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10520).ListItem.Label)">$INFO[Container(10520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-10520">
		<value condition="!String.IsEmpty(Container(10520).ListItem.TvShowTitle) + !String.IsEmpty(Container(10520).ListItem.Genre)">$INFO[Container(10520).ListItem.TvShowTitle,, • ]$INFO[Container(10520).ListItem.Year,, • ]$INFO[Container(10520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10520).ListItem.TvShowTitle)">$INFO[Container(10520).ListItem.TvShowTitle,, • ]$INFO[Container(10520).ListItem.Premiered,, • ]$INFO[Container(10520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(10520).ListItem.Year)">$INFO[Container(10520).ListItem.Year,, • ]$INFO[Container(10520).ListItem.Duration,,min. • ]$INFO[Container(10520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10520).ListItem.Artist) + !String.IsEmpty(Container(10520).ListItem.Album)">$INFO[Container(10520).ListItem.Artist,, • ]$INFO[Container(10520).ListItem.Album,, • ]$INFO[Container(10520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(10520).ListItem.Property(StartTime))">$INFO[Container(10520).ListItem.Property(ChannelName),, • ]$INFO[Container(10520).ListItem.Property(StartTime),, - ]$INFO[Container(10520).ListItem.Property(EndTime),, • ]$INFO[Container(10520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10520).ListItem.StartTime)">$INFO[Container(10520).ListItem.ChannelName,, • ]$INFO[Container(10520).ListItem.StartTime,, - ]$INFO[Container(10520).ListItem.EndTime,, • ]$INFO[Container(10520).ListItem.Genre]</value>
	</variable>
	<variable name="10530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-10530">
		<value condition="String.Contains(Container(10530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(10530).ListItem.label] $INFO[Container(10530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(10530).ListItem.Title) + String.Contains(Container(10530).ListItem.FolderPath, pvr://)">$INFO[Container(10530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10530).ListItem.Season) + !String.IsEmpty(Container(10530).ListItem.Episode) + !String.Contains(Container(10530).ListItem.TvShowTitle,Container(10530).ListItem.Title)">[UPPERCASE]S$INFO[Container(10530).ListItem.Season]E$INFO[Container(10530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(10530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10530).ListItem.Title)">$INFO[Container(10530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10530).ListItem.Label)">$INFO[Container(10530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-10530">
		<value condition="!String.IsEmpty(Container(10530).ListItem.TvShowTitle) + !String.IsEmpty(Container(10530).ListItem.Genre)">$INFO[Container(10530).ListItem.TvShowTitle,, • ]$INFO[Container(10530).ListItem.Year,, • ]$INFO[Container(10530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10530).ListItem.TvShowTitle)">$INFO[Container(10530).ListItem.TvShowTitle,, • ]$INFO[Container(10530).ListItem.Premiered,, • ]$INFO[Container(10530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(10530).ListItem.Year)">$INFO[Container(10530).ListItem.Year,, • ]$INFO[Container(10530).ListItem.Duration,,min. • ]$INFO[Container(10530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10530).ListItem.Artist) + !String.IsEmpty(Container(10530).ListItem.Album)">$INFO[Container(10530).ListItem.Artist,, • ]$INFO[Container(10530).ListItem.Album,, • ]$INFO[Container(10530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(10530).ListItem.Property(StartTime))">$INFO[Container(10530).ListItem.Property(ChannelName),, • ]$INFO[Container(10530).ListItem.Property(StartTime),, - ]$INFO[Container(10530).ListItem.Property(EndTime),, • ]$INFO[Container(10530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10530).ListItem.StartTime)">$INFO[Container(10530).ListItem.ChannelName,, • ]$INFO[Container(10530).ListItem.StartTime,, - ]$INFO[Container(10530).ListItem.EndTime,, • ]$INFO[Container(10530).ListItem.Genre]</value>
	</variable>
	<variable name="10540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-10540">
		<value condition="String.Contains(Container(10540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(10540).ListItem.label] $INFO[Container(10540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(10540).ListItem.Title) + String.Contains(Container(10540).ListItem.FolderPath, pvr://)">$INFO[Container(10540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10540).ListItem.Season) + !String.IsEmpty(Container(10540).ListItem.Episode) + !String.Contains(Container(10540).ListItem.TvShowTitle,Container(10540).ListItem.Title)">[UPPERCASE]S$INFO[Container(10540).ListItem.Season]E$INFO[Container(10540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(10540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10540).ListItem.Title)">$INFO[Container(10540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10540).ListItem.Label)">$INFO[Container(10540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-10540">
		<value condition="!String.IsEmpty(Container(10540).ListItem.TvShowTitle) + !String.IsEmpty(Container(10540).ListItem.Genre)">$INFO[Container(10540).ListItem.TvShowTitle,, • ]$INFO[Container(10540).ListItem.Year,, • ]$INFO[Container(10540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10540).ListItem.TvShowTitle)">$INFO[Container(10540).ListItem.TvShowTitle,, • ]$INFO[Container(10540).ListItem.Premiered,, • ]$INFO[Container(10540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(10540).ListItem.Year)">$INFO[Container(10540).ListItem.Year,, • ]$INFO[Container(10540).ListItem.Duration,,min. • ]$INFO[Container(10540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10540).ListItem.Artist) + !String.IsEmpty(Container(10540).ListItem.Album)">$INFO[Container(10540).ListItem.Artist,, • ]$INFO[Container(10540).ListItem.Album,, • ]$INFO[Container(10540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(10540).ListItem.Property(StartTime))">$INFO[Container(10540).ListItem.Property(ChannelName),, • ]$INFO[Container(10540).ListItem.Property(StartTime),, - ]$INFO[Container(10540).ListItem.Property(EndTime),, • ]$INFO[Container(10540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10540).ListItem.StartTime)">$INFO[Container(10540).ListItem.ChannelName,, • ]$INFO[Container(10540).ListItem.StartTime,, - ]$INFO[Container(10540).ListItem.EndTime,, • ]$INFO[Container(10540).ListItem.Genre]</value>
	</variable>
	<variable name="10550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-10550">
		<value condition="String.Contains(Container(10550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(10550).ListItem.label] $INFO[Container(10550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(10550).ListItem.Title) + String.Contains(Container(10550).ListItem.FolderPath, pvr://)">$INFO[Container(10550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10550).ListItem.Season) + !String.IsEmpty(Container(10550).ListItem.Episode) + !String.Contains(Container(10550).ListItem.TvShowTitle,Container(10550).ListItem.Title)">[UPPERCASE]S$INFO[Container(10550).ListItem.Season]E$INFO[Container(10550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(10550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10550).ListItem.Title)">$INFO[Container(10550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10550).ListItem.Label)">$INFO[Container(10550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-10550">
		<value condition="!String.IsEmpty(Container(10550).ListItem.TvShowTitle) + !String.IsEmpty(Container(10550).ListItem.Genre)">$INFO[Container(10550).ListItem.TvShowTitle,, • ]$INFO[Container(10550).ListItem.Year,, • ]$INFO[Container(10550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10550).ListItem.TvShowTitle)">$INFO[Container(10550).ListItem.TvShowTitle,, • ]$INFO[Container(10550).ListItem.Premiered,, • ]$INFO[Container(10550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(10550).ListItem.Year)">$INFO[Container(10550).ListItem.Year,, • ]$INFO[Container(10550).ListItem.Duration,,min. • ]$INFO[Container(10550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10550).ListItem.Artist) + !String.IsEmpty(Container(10550).ListItem.Album)">$INFO[Container(10550).ListItem.Artist,, • ]$INFO[Container(10550).ListItem.Album,, • ]$INFO[Container(10550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(10550).ListItem.Property(StartTime))">$INFO[Container(10550).ListItem.Property(ChannelName),, • ]$INFO[Container(10550).ListItem.Property(StartTime),, - ]$INFO[Container(10550).ListItem.Property(EndTime),, • ]$INFO[Container(10550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10550).ListItem.StartTime)">$INFO[Container(10550).ListItem.ChannelName,, • ]$INFO[Container(10550).ListItem.StartTime,, - ]$INFO[Container(10550).ListItem.EndTime,, • ]$INFO[Container(10550).ListItem.Genre]</value>
	</variable>
	<variable name="10560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-10560">
		<value condition="String.Contains(Container(10560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(10560).ListItem.label] $INFO[Container(10560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(10560).ListItem.Title) + String.Contains(Container(10560).ListItem.FolderPath, pvr://)">$INFO[Container(10560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10560).ListItem.Season) + !String.IsEmpty(Container(10560).ListItem.Episode) + !String.Contains(Container(10560).ListItem.TvShowTitle,Container(10560).ListItem.Title)">[UPPERCASE]S$INFO[Container(10560).ListItem.Season]E$INFO[Container(10560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(10560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10560).ListItem.Title)">$INFO[Container(10560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10560).ListItem.Label)">$INFO[Container(10560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-10560">
		<value condition="!String.IsEmpty(Container(10560).ListItem.TvShowTitle) + !String.IsEmpty(Container(10560).ListItem.Genre)">$INFO[Container(10560).ListItem.TvShowTitle,, • ]$INFO[Container(10560).ListItem.Year,, • ]$INFO[Container(10560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10560).ListItem.TvShowTitle)">$INFO[Container(10560).ListItem.TvShowTitle,, • ]$INFO[Container(10560).ListItem.Premiered,, • ]$INFO[Container(10560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(10560).ListItem.Year)">$INFO[Container(10560).ListItem.Year,, • ]$INFO[Container(10560).ListItem.Duration,,min. • ]$INFO[Container(10560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10560).ListItem.Artist) + !String.IsEmpty(Container(10560).ListItem.Album)">$INFO[Container(10560).ListItem.Artist,, • ]$INFO[Container(10560).ListItem.Album,, • ]$INFO[Container(10560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(10560).ListItem.Property(StartTime))">$INFO[Container(10560).ListItem.Property(ChannelName),, • ]$INFO[Container(10560).ListItem.Property(StartTime),, - ]$INFO[Container(10560).ListItem.Property(EndTime),, • ]$INFO[Container(10560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10560).ListItem.StartTime)">$INFO[Container(10560).ListItem.ChannelName,, • ]$INFO[Container(10560).ListItem.StartTime,, - ]$INFO[Container(10560).ListItem.EndTime,, • ]$INFO[Container(10560).ListItem.Genre]</value>
	</variable>
	<variable name="10570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-10570">
		<value condition="String.Contains(Container(10570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(10570).ListItem.label] $INFO[Container(10570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(10570).ListItem.Title) + String.Contains(Container(10570).ListItem.FolderPath, pvr://)">$INFO[Container(10570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10570).ListItem.Season) + !String.IsEmpty(Container(10570).ListItem.Episode) + !String.Contains(Container(10570).ListItem.TvShowTitle,Container(10570).ListItem.Title)">[UPPERCASE]S$INFO[Container(10570).ListItem.Season]E$INFO[Container(10570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(10570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10570).ListItem.Title)">$INFO[Container(10570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10570).ListItem.Label)">$INFO[Container(10570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-10570">
		<value condition="!String.IsEmpty(Container(10570).ListItem.TvShowTitle) + !String.IsEmpty(Container(10570).ListItem.Genre)">$INFO[Container(10570).ListItem.TvShowTitle,, • ]$INFO[Container(10570).ListItem.Year,, • ]$INFO[Container(10570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10570).ListItem.TvShowTitle)">$INFO[Container(10570).ListItem.TvShowTitle,, • ]$INFO[Container(10570).ListItem.Premiered,, • ]$INFO[Container(10570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(10570).ListItem.Year)">$INFO[Container(10570).ListItem.Year,, • ]$INFO[Container(10570).ListItem.Duration,,min. • ]$INFO[Container(10570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10570).ListItem.Artist) + !String.IsEmpty(Container(10570).ListItem.Album)">$INFO[Container(10570).ListItem.Artist,, • ]$INFO[Container(10570).ListItem.Album,, • ]$INFO[Container(10570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(10570).ListItem.Property(StartTime))">$INFO[Container(10570).ListItem.Property(ChannelName),, • ]$INFO[Container(10570).ListItem.Property(StartTime),, - ]$INFO[Container(10570).ListItem.Property(EndTime),, • ]$INFO[Container(10570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10570).ListItem.StartTime)">$INFO[Container(10570).ListItem.ChannelName,, • ]$INFO[Container(10570).ListItem.StartTime,, - ]$INFO[Container(10570).ListItem.EndTime,, • ]$INFO[Container(10570).ListItem.Genre]</value>
	</variable>
	<variable name="10580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-10580">
		<value condition="String.Contains(Container(10580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(10580).ListItem.label] $INFO[Container(10580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(10580).ListItem.Title) + String.Contains(Container(10580).ListItem.FolderPath, pvr://)">$INFO[Container(10580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10580).ListItem.Season) + !String.IsEmpty(Container(10580).ListItem.Episode) + !String.Contains(Container(10580).ListItem.TvShowTitle,Container(10580).ListItem.Title)">[UPPERCASE]S$INFO[Container(10580).ListItem.Season]E$INFO[Container(10580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(10580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10580).ListItem.Title)">$INFO[Container(10580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(10580).ListItem.Label)">$INFO[Container(10580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-10580">
		<value condition="!String.IsEmpty(Container(10580).ListItem.TvShowTitle) + !String.IsEmpty(Container(10580).ListItem.Genre)">$INFO[Container(10580).ListItem.TvShowTitle,, • ]$INFO[Container(10580).ListItem.Year,, • ]$INFO[Container(10580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10580).ListItem.TvShowTitle)">$INFO[Container(10580).ListItem.TvShowTitle,, • ]$INFO[Container(10580).ListItem.Premiered,, • ]$INFO[Container(10580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(10580).ListItem.Year)">$INFO[Container(10580).ListItem.Year,, • ]$INFO[Container(10580).ListItem.Duration,,min. • ]$INFO[Container(10580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10580).ListItem.Artist) + !String.IsEmpty(Container(10580).ListItem.Album)">$INFO[Container(10580).ListItem.Artist,, • ]$INFO[Container(10580).ListItem.Album,, • ]$INFO[Container(10580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(10580).ListItem.Property(StartTime))">$INFO[Container(10580).ListItem.Property(ChannelName),, • ]$INFO[Container(10580).ListItem.Property(StartTime),, - ]$INFO[Container(10580).ListItem.Property(EndTime),, • ]$INFO[Container(10580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(10580).ListItem.StartTime)">$INFO[Container(10580).ListItem.ChannelName,, • ]$INFO[Container(10580).ListItem.StartTime,, - ]$INFO[Container(10580).ListItem.EndTime,, • ]$INFO[Container(10580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-10">
		<value condition="Skin.String(widgetvalue-num-13000,7)" />
		<value condition="Skin.String(widgetvalue-num-13000,6)" />
		<value condition="Skin.String(widgetvalue-num-13000,5)" />
		<value condition="Skin.String(widgetvalue-num-13000,4)" />
		<value condition="Skin.String(widgetvalue-num-13000,3)" />
		<value condition="Skin.String(widgetvalue-num-13000,2)" />
		<value condition="Skin.String(widgetvalue-num-13000,1)" />
		<value>130</value>
	</variable>
	<variable name="14510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-14510">
		<value condition="String.Contains(Container(14510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(14510).ListItem.label] $INFO[Container(14510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(14510).ListItem.Title) + String.Contains(Container(14510).ListItem.FolderPath, pvr://)">$INFO[Container(14510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14510).ListItem.Season) + !String.IsEmpty(Container(14510).ListItem.Episode) + !String.Contains(Container(14510).ListItem.TvShowTitle,Container(14510).ListItem.Title)">[UPPERCASE]S$INFO[Container(14510).ListItem.Season]E$INFO[Container(14510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(14510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14510).ListItem.Title)">$INFO[Container(14510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14510).ListItem.Label)">$INFO[Container(14510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-14510">
		<value condition="!String.IsEmpty(Container(14510).ListItem.TvShowTitle) + !String.IsEmpty(Container(14510).ListItem.Genre)">$INFO[Container(14510).ListItem.TvShowTitle,, • ]$INFO[Container(14510).ListItem.Year,, • ]$INFO[Container(14510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14510).ListItem.TvShowTitle)">$INFO[Container(14510).ListItem.TvShowTitle,, • ]$INFO[Container(14510).ListItem.Premiered,, • ]$INFO[Container(14510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(14510).ListItem.Year)">$INFO[Container(14510).ListItem.Year,, • ]$INFO[Container(14510).ListItem.Duration,,min. • ]$INFO[Container(14510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14510).ListItem.Artist) + !String.IsEmpty(Container(14510).ListItem.Album)">$INFO[Container(14510).ListItem.Artist,, • ]$INFO[Container(14510).ListItem.Album,, • ]$INFO[Container(14510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(14510).ListItem.Property(StartTime))">$INFO[Container(14510).ListItem.Property(ChannelName),, • ]$INFO[Container(14510).ListItem.Property(StartTime),, - ]$INFO[Container(14510).ListItem.Property(EndTime),, • ]$INFO[Container(14510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14510).ListItem.StartTime)">$INFO[Container(14510).ListItem.ChannelName,, • ]$INFO[Container(14510).ListItem.StartTime,, - ]$INFO[Container(14510).ListItem.EndTime,, • ]$INFO[Container(14510).ListItem.Genre]</value>
	</variable>
	<variable name="14520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-14520">
		<value condition="String.Contains(Container(14520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(14520).ListItem.label] $INFO[Container(14520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(14520).ListItem.Title) + String.Contains(Container(14520).ListItem.FolderPath, pvr://)">$INFO[Container(14520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14520).ListItem.Season) + !String.IsEmpty(Container(14520).ListItem.Episode) + !String.Contains(Container(14520).ListItem.TvShowTitle,Container(14520).ListItem.Title)">[UPPERCASE]S$INFO[Container(14520).ListItem.Season]E$INFO[Container(14520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(14520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14520).ListItem.Title)">$INFO[Container(14520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14520).ListItem.Label)">$INFO[Container(14520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-14520">
		<value condition="!String.IsEmpty(Container(14520).ListItem.TvShowTitle) + !String.IsEmpty(Container(14520).ListItem.Genre)">$INFO[Container(14520).ListItem.TvShowTitle,, • ]$INFO[Container(14520).ListItem.Year,, • ]$INFO[Container(14520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14520).ListItem.TvShowTitle)">$INFO[Container(14520).ListItem.TvShowTitle,, • ]$INFO[Container(14520).ListItem.Premiered,, • ]$INFO[Container(14520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(14520).ListItem.Year)">$INFO[Container(14520).ListItem.Year,, • ]$INFO[Container(14520).ListItem.Duration,,min. • ]$INFO[Container(14520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14520).ListItem.Artist) + !String.IsEmpty(Container(14520).ListItem.Album)">$INFO[Container(14520).ListItem.Artist,, • ]$INFO[Container(14520).ListItem.Album,, • ]$INFO[Container(14520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(14520).ListItem.Property(StartTime))">$INFO[Container(14520).ListItem.Property(ChannelName),, • ]$INFO[Container(14520).ListItem.Property(StartTime),, - ]$INFO[Container(14520).ListItem.Property(EndTime),, • ]$INFO[Container(14520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14520).ListItem.StartTime)">$INFO[Container(14520).ListItem.ChannelName,, • ]$INFO[Container(14520).ListItem.StartTime,, - ]$INFO[Container(14520).ListItem.EndTime,, • ]$INFO[Container(14520).ListItem.Genre]</value>
	</variable>
	<variable name="14530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-14530">
		<value condition="String.Contains(Container(14530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(14530).ListItem.label] $INFO[Container(14530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(14530).ListItem.Title) + String.Contains(Container(14530).ListItem.FolderPath, pvr://)">$INFO[Container(14530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14530).ListItem.Season) + !String.IsEmpty(Container(14530).ListItem.Episode) + !String.Contains(Container(14530).ListItem.TvShowTitle,Container(14530).ListItem.Title)">[UPPERCASE]S$INFO[Container(14530).ListItem.Season]E$INFO[Container(14530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(14530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14530).ListItem.Title)">$INFO[Container(14530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14530).ListItem.Label)">$INFO[Container(14530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-14530">
		<value condition="!String.IsEmpty(Container(14530).ListItem.TvShowTitle) + !String.IsEmpty(Container(14530).ListItem.Genre)">$INFO[Container(14530).ListItem.TvShowTitle,, • ]$INFO[Container(14530).ListItem.Year,, • ]$INFO[Container(14530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14530).ListItem.TvShowTitle)">$INFO[Container(14530).ListItem.TvShowTitle,, • ]$INFO[Container(14530).ListItem.Premiered,, • ]$INFO[Container(14530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(14530).ListItem.Year)">$INFO[Container(14530).ListItem.Year,, • ]$INFO[Container(14530).ListItem.Duration,,min. • ]$INFO[Container(14530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14530).ListItem.Artist) + !String.IsEmpty(Container(14530).ListItem.Album)">$INFO[Container(14530).ListItem.Artist,, • ]$INFO[Container(14530).ListItem.Album,, • ]$INFO[Container(14530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(14530).ListItem.Property(StartTime))">$INFO[Container(14530).ListItem.Property(ChannelName),, • ]$INFO[Container(14530).ListItem.Property(StartTime),, - ]$INFO[Container(14530).ListItem.Property(EndTime),, • ]$INFO[Container(14530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14530).ListItem.StartTime)">$INFO[Container(14530).ListItem.ChannelName,, • ]$INFO[Container(14530).ListItem.StartTime,, - ]$INFO[Container(14530).ListItem.EndTime,, • ]$INFO[Container(14530).ListItem.Genre]</value>
	</variable>
	<variable name="14540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-14540">
		<value condition="String.Contains(Container(14540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(14540).ListItem.label] $INFO[Container(14540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(14540).ListItem.Title) + String.Contains(Container(14540).ListItem.FolderPath, pvr://)">$INFO[Container(14540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14540).ListItem.Season) + !String.IsEmpty(Container(14540).ListItem.Episode) + !String.Contains(Container(14540).ListItem.TvShowTitle,Container(14540).ListItem.Title)">[UPPERCASE]S$INFO[Container(14540).ListItem.Season]E$INFO[Container(14540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(14540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14540).ListItem.Title)">$INFO[Container(14540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14540).ListItem.Label)">$INFO[Container(14540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-14540">
		<value condition="!String.IsEmpty(Container(14540).ListItem.TvShowTitle) + !String.IsEmpty(Container(14540).ListItem.Genre)">$INFO[Container(14540).ListItem.TvShowTitle,, • ]$INFO[Container(14540).ListItem.Year,, • ]$INFO[Container(14540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14540).ListItem.TvShowTitle)">$INFO[Container(14540).ListItem.TvShowTitle,, • ]$INFO[Container(14540).ListItem.Premiered,, • ]$INFO[Container(14540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(14540).ListItem.Year)">$INFO[Container(14540).ListItem.Year,, • ]$INFO[Container(14540).ListItem.Duration,,min. • ]$INFO[Container(14540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14540).ListItem.Artist) + !String.IsEmpty(Container(14540).ListItem.Album)">$INFO[Container(14540).ListItem.Artist,, • ]$INFO[Container(14540).ListItem.Album,, • ]$INFO[Container(14540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(14540).ListItem.Property(StartTime))">$INFO[Container(14540).ListItem.Property(ChannelName),, • ]$INFO[Container(14540).ListItem.Property(StartTime),, - ]$INFO[Container(14540).ListItem.Property(EndTime),, • ]$INFO[Container(14540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14540).ListItem.StartTime)">$INFO[Container(14540).ListItem.ChannelName,, • ]$INFO[Container(14540).ListItem.StartTime,, - ]$INFO[Container(14540).ListItem.EndTime,, • ]$INFO[Container(14540).ListItem.Genre]</value>
	</variable>
	<variable name="14550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-14550">
		<value condition="String.Contains(Container(14550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(14550).ListItem.label] $INFO[Container(14550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(14550).ListItem.Title) + String.Contains(Container(14550).ListItem.FolderPath, pvr://)">$INFO[Container(14550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14550).ListItem.Season) + !String.IsEmpty(Container(14550).ListItem.Episode) + !String.Contains(Container(14550).ListItem.TvShowTitle,Container(14550).ListItem.Title)">[UPPERCASE]S$INFO[Container(14550).ListItem.Season]E$INFO[Container(14550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(14550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14550).ListItem.Title)">$INFO[Container(14550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14550).ListItem.Label)">$INFO[Container(14550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-14550">
		<value condition="!String.IsEmpty(Container(14550).ListItem.TvShowTitle) + !String.IsEmpty(Container(14550).ListItem.Genre)">$INFO[Container(14550).ListItem.TvShowTitle,, • ]$INFO[Container(14550).ListItem.Year,, • ]$INFO[Container(14550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14550).ListItem.TvShowTitle)">$INFO[Container(14550).ListItem.TvShowTitle,, • ]$INFO[Container(14550).ListItem.Premiered,, • ]$INFO[Container(14550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(14550).ListItem.Year)">$INFO[Container(14550).ListItem.Year,, • ]$INFO[Container(14550).ListItem.Duration,,min. • ]$INFO[Container(14550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14550).ListItem.Artist) + !String.IsEmpty(Container(14550).ListItem.Album)">$INFO[Container(14550).ListItem.Artist,, • ]$INFO[Container(14550).ListItem.Album,, • ]$INFO[Container(14550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(14550).ListItem.Property(StartTime))">$INFO[Container(14550).ListItem.Property(ChannelName),, • ]$INFO[Container(14550).ListItem.Property(StartTime),, - ]$INFO[Container(14550).ListItem.Property(EndTime),, • ]$INFO[Container(14550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14550).ListItem.StartTime)">$INFO[Container(14550).ListItem.ChannelName,, • ]$INFO[Container(14550).ListItem.StartTime,, - ]$INFO[Container(14550).ListItem.EndTime,, • ]$INFO[Container(14550).ListItem.Genre]</value>
	</variable>
	<variable name="14560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-14560">
		<value condition="String.Contains(Container(14560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(14560).ListItem.label] $INFO[Container(14560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(14560).ListItem.Title) + String.Contains(Container(14560).ListItem.FolderPath, pvr://)">$INFO[Container(14560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14560).ListItem.Season) + !String.IsEmpty(Container(14560).ListItem.Episode) + !String.Contains(Container(14560).ListItem.TvShowTitle,Container(14560).ListItem.Title)">[UPPERCASE]S$INFO[Container(14560).ListItem.Season]E$INFO[Container(14560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(14560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14560).ListItem.Title)">$INFO[Container(14560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14560).ListItem.Label)">$INFO[Container(14560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-14560">
		<value condition="!String.IsEmpty(Container(14560).ListItem.TvShowTitle) + !String.IsEmpty(Container(14560).ListItem.Genre)">$INFO[Container(14560).ListItem.TvShowTitle,, • ]$INFO[Container(14560).ListItem.Year,, • ]$INFO[Container(14560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14560).ListItem.TvShowTitle)">$INFO[Container(14560).ListItem.TvShowTitle,, • ]$INFO[Container(14560).ListItem.Premiered,, • ]$INFO[Container(14560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(14560).ListItem.Year)">$INFO[Container(14560).ListItem.Year,, • ]$INFO[Container(14560).ListItem.Duration,,min. • ]$INFO[Container(14560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14560).ListItem.Artist) + !String.IsEmpty(Container(14560).ListItem.Album)">$INFO[Container(14560).ListItem.Artist,, • ]$INFO[Container(14560).ListItem.Album,, • ]$INFO[Container(14560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(14560).ListItem.Property(StartTime))">$INFO[Container(14560).ListItem.Property(ChannelName),, • ]$INFO[Container(14560).ListItem.Property(StartTime),, - ]$INFO[Container(14560).ListItem.Property(EndTime),, • ]$INFO[Container(14560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14560).ListItem.StartTime)">$INFO[Container(14560).ListItem.ChannelName,, • ]$INFO[Container(14560).ListItem.StartTime,, - ]$INFO[Container(14560).ListItem.EndTime,, • ]$INFO[Container(14560).ListItem.Genre]</value>
	</variable>
	<variable name="14570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-14570">
		<value condition="String.Contains(Container(14570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(14570).ListItem.label] $INFO[Container(14570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(14570).ListItem.Title) + String.Contains(Container(14570).ListItem.FolderPath, pvr://)">$INFO[Container(14570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14570).ListItem.Season) + !String.IsEmpty(Container(14570).ListItem.Episode) + !String.Contains(Container(14570).ListItem.TvShowTitle,Container(14570).ListItem.Title)">[UPPERCASE]S$INFO[Container(14570).ListItem.Season]E$INFO[Container(14570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(14570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14570).ListItem.Title)">$INFO[Container(14570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14570).ListItem.Label)">$INFO[Container(14570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-14570">
		<value condition="!String.IsEmpty(Container(14570).ListItem.TvShowTitle) + !String.IsEmpty(Container(14570).ListItem.Genre)">$INFO[Container(14570).ListItem.TvShowTitle,, • ]$INFO[Container(14570).ListItem.Year,, • ]$INFO[Container(14570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14570).ListItem.TvShowTitle)">$INFO[Container(14570).ListItem.TvShowTitle,, • ]$INFO[Container(14570).ListItem.Premiered,, • ]$INFO[Container(14570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(14570).ListItem.Year)">$INFO[Container(14570).ListItem.Year,, • ]$INFO[Container(14570).ListItem.Duration,,min. • ]$INFO[Container(14570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14570).ListItem.Artist) + !String.IsEmpty(Container(14570).ListItem.Album)">$INFO[Container(14570).ListItem.Artist,, • ]$INFO[Container(14570).ListItem.Album,, • ]$INFO[Container(14570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(14570).ListItem.Property(StartTime))">$INFO[Container(14570).ListItem.Property(ChannelName),, • ]$INFO[Container(14570).ListItem.Property(StartTime),, - ]$INFO[Container(14570).ListItem.Property(EndTime),, • ]$INFO[Container(14570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14570).ListItem.StartTime)">$INFO[Container(14570).ListItem.ChannelName,, • ]$INFO[Container(14570).ListItem.StartTime,, - ]$INFO[Container(14570).ListItem.EndTime,, • ]$INFO[Container(14570).ListItem.Genre]</value>
	</variable>
	<variable name="14580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-14580">
		<value condition="String.Contains(Container(14580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(14580).ListItem.label] $INFO[Container(14580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(14580).ListItem.Title) + String.Contains(Container(14580).ListItem.FolderPath, pvr://)">$INFO[Container(14580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14580).ListItem.Season) + !String.IsEmpty(Container(14580).ListItem.Episode) + !String.Contains(Container(14580).ListItem.TvShowTitle,Container(14580).ListItem.Title)">[UPPERCASE]S$INFO[Container(14580).ListItem.Season]E$INFO[Container(14580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(14580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14580).ListItem.Title)">$INFO[Container(14580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(14580).ListItem.Label)">$INFO[Container(14580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-14580">
		<value condition="!String.IsEmpty(Container(14580).ListItem.TvShowTitle) + !String.IsEmpty(Container(14580).ListItem.Genre)">$INFO[Container(14580).ListItem.TvShowTitle,, • ]$INFO[Container(14580).ListItem.Year,, • ]$INFO[Container(14580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14580).ListItem.TvShowTitle)">$INFO[Container(14580).ListItem.TvShowTitle,, • ]$INFO[Container(14580).ListItem.Premiered,, • ]$INFO[Container(14580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(14580).ListItem.Year)">$INFO[Container(14580).ListItem.Year,, • ]$INFO[Container(14580).ListItem.Duration,,min. • ]$INFO[Container(14580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14580).ListItem.Artist) + !String.IsEmpty(Container(14580).ListItem.Album)">$INFO[Container(14580).ListItem.Artist,, • ]$INFO[Container(14580).ListItem.Album,, • ]$INFO[Container(14580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(14580).ListItem.Property(StartTime))">$INFO[Container(14580).ListItem.Property(ChannelName),, • ]$INFO[Container(14580).ListItem.Property(StartTime),, - ]$INFO[Container(14580).ListItem.Property(EndTime),, • ]$INFO[Container(14580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(14580).ListItem.StartTime)">$INFO[Container(14580).ListItem.ChannelName,, • ]$INFO[Container(14580).ListItem.StartTime,, - ]$INFO[Container(14580).ListItem.EndTime,, • ]$INFO[Container(14580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-14">
		<value condition="Skin.String(widgetvalue-weather,7)" />
		<value condition="Skin.String(widgetvalue-weather,6)" />
		<value condition="Skin.String(widgetvalue-weather,5)" />
		<value condition="Skin.String(widgetvalue-weather,4)" />
		<value condition="Skin.String(widgetvalue-weather,3)" />
		<value condition="Skin.String(widgetvalue-weather,2)" />
		<value condition="Skin.String(widgetvalue-weather,1)" />
		<value>8</value>
	</variable>
</includes>
